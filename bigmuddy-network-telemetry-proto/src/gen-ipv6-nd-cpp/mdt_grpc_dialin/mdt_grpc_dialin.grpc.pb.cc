// Generated by the gRPC protobuf plugin.
// If you make any local change, they will be lost.
// source: mdt_grpc_dialin/mdt_grpc_dialin.proto

#include "mdt_grpc_dialin/mdt_grpc_dialin.pb.h"
#include "mdt_grpc_dialin/mdt_grpc_dialin.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace IOSXRExtensibleManagabilityService {

static const char* gRPCConfigOper_method_names[] = {
  "/IOSXRExtensibleManagabilityService.gRPCConfigOper/GetConfig",
  "/IOSXRExtensibleManagabilityService.gRPCConfigOper/MergeConfig",
  "/IOSXRExtensibleManagabilityService.gRPCConfigOper/DeleteConfig",
  "/IOSXRExtensibleManagabilityService.gRPCConfigOper/ReplaceConfig",
  "/IOSXRExtensibleManagabilityService.gRPCConfigOper/CliConfig",
  "/IOSXRExtensibleManagabilityService.gRPCConfigOper/CommitReplace",
  "/IOSXRExtensibleManagabilityService.gRPCConfigOper/CommitConfig",
  "/IOSXRExtensibleManagabilityService.gRPCConfigOper/ConfigDiscardChanges",
  "/IOSXRExtensibleManagabilityService.gRPCConfigOper/GetOper",
  "/IOSXRExtensibleManagabilityService.gRPCConfigOper/CreateSubs",
};

std::unique_ptr< gRPCConfigOper::Stub> gRPCConfigOper::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< gRPCConfigOper::Stub> stub(new gRPCConfigOper::Stub(channel));
  return stub;
}

gRPCConfigOper::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_GetConfig_(gRPCConfigOper_method_names[0], ::grpc::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_MergeConfig_(gRPCConfigOper_method_names[1], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteConfig_(gRPCConfigOper_method_names[2], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ReplaceConfig_(gRPCConfigOper_method_names[3], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CliConfig_(gRPCConfigOper_method_names[4], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CommitReplace_(gRPCConfigOper_method_names[5], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CommitConfig_(gRPCConfigOper_method_names[6], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ConfigDiscardChanges_(gRPCConfigOper_method_names[7], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetOper_(gRPCConfigOper_method_names[8], ::grpc::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_CreateSubs_(gRPCConfigOper_method_names[9], ::grpc::RpcMethod::SERVER_STREAMING, channel)
  {}

::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::ConfigGetReply>* gRPCConfigOper::Stub::GetConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigGetArgs& request) {
  return new ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::ConfigGetReply>(channel_.get(), rpcmethod_GetConfig_, context, request);
}

::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::ConfigGetReply>* gRPCConfigOper::Stub::AsyncGetConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigGetArgs& request, ::grpc::CompletionQueue* cq, void* tag) {
  return new ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::ConfigGetReply>(channel_.get(), cq, rpcmethod_GetConfig_, context, request, tag);
}

::grpc::Status gRPCConfigOper::Stub::MergeConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_MergeConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::ConfigReply>* gRPCConfigOper::Stub::AsyncMergeConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::ConfigReply>(channel_.get(), cq, rpcmethod_MergeConfig_, context, request);
}

::grpc::Status gRPCConfigOper::Stub::DeleteConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::ConfigReply>* gRPCConfigOper::Stub::AsyncDeleteConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::ConfigReply>(channel_.get(), cq, rpcmethod_DeleteConfig_, context, request);
}

::grpc::Status gRPCConfigOper::Stub::ReplaceConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_ReplaceConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::ConfigReply>* gRPCConfigOper::Stub::AsyncReplaceConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::ConfigReply>(channel_.get(), cq, rpcmethod_ReplaceConfig_, context, request);
}

::grpc::Status gRPCConfigOper::Stub::CliConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CliConfigArgs& request, ::IOSXRExtensibleManagabilityService::CliConfigReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_CliConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::CliConfigReply>* gRPCConfigOper::Stub::AsyncCliConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CliConfigArgs& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::CliConfigReply>(channel_.get(), cq, rpcmethod_CliConfig_, context, request);
}

::grpc::Status gRPCConfigOper::Stub::CommitReplace(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitReplaceArgs& request, ::IOSXRExtensibleManagabilityService::CommitReplaceReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_CommitReplace_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::CommitReplaceReply>* gRPCConfigOper::Stub::AsyncCommitReplaceRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitReplaceArgs& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::CommitReplaceReply>(channel_.get(), cq, rpcmethod_CommitReplace_, context, request);
}

::grpc::Status gRPCConfigOper::Stub::CommitConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitArgs& request, ::IOSXRExtensibleManagabilityService::CommitReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_CommitConfig_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::CommitReply>* gRPCConfigOper::Stub::AsyncCommitConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitArgs& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::CommitReply>(channel_.get(), cq, rpcmethod_CommitConfig_, context, request);
}

::grpc::Status gRPCConfigOper::Stub::ConfigDiscardChanges(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::DiscardChangesArgs& request, ::IOSXRExtensibleManagabilityService::DiscardChangesReply* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_ConfigDiscardChanges_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::DiscardChangesReply>* gRPCConfigOper::Stub::AsyncConfigDiscardChangesRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::DiscardChangesArgs& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::DiscardChangesReply>(channel_.get(), cq, rpcmethod_ConfigDiscardChanges_, context, request);
}

::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::GetOperReply>* gRPCConfigOper::Stub::GetOperRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::GetOperArgs& request) {
  return new ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::GetOperReply>(channel_.get(), rpcmethod_GetOper_, context, request);
}

::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::GetOperReply>* gRPCConfigOper::Stub::AsyncGetOperRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::GetOperArgs& request, ::grpc::CompletionQueue* cq, void* tag) {
  return new ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::GetOperReply>(channel_.get(), cq, rpcmethod_GetOper_, context, request, tag);
}

::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::CreateSubsReply>* gRPCConfigOper::Stub::CreateSubsRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CreateSubsArgs& request) {
  return new ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::CreateSubsReply>(channel_.get(), rpcmethod_CreateSubs_, context, request);
}

::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::CreateSubsReply>* gRPCConfigOper::Stub::AsyncCreateSubsRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CreateSubsArgs& request, ::grpc::CompletionQueue* cq, void* tag) {
  return new ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::CreateSubsReply>(channel_.get(), cq, rpcmethod_CreateSubs_, context, request, tag);
}

gRPCConfigOper::Service::Service() {
  (void)gRPCConfigOper_method_names;
  AddMethod(new ::grpc::RpcServiceMethod(
      gRPCConfigOper_method_names[0],
      ::grpc::RpcMethod::SERVER_STREAMING,
      new ::grpc::ServerStreamingHandler< gRPCConfigOper::Service, ::IOSXRExtensibleManagabilityService::ConfigGetArgs, ::IOSXRExtensibleManagabilityService::ConfigGetReply>(
          std::mem_fn(&gRPCConfigOper::Service::GetConfig), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      gRPCConfigOper_method_names[1],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< gRPCConfigOper::Service, ::IOSXRExtensibleManagabilityService::ConfigArgs, ::IOSXRExtensibleManagabilityService::ConfigReply>(
          std::mem_fn(&gRPCConfigOper::Service::MergeConfig), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      gRPCConfigOper_method_names[2],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< gRPCConfigOper::Service, ::IOSXRExtensibleManagabilityService::ConfigArgs, ::IOSXRExtensibleManagabilityService::ConfigReply>(
          std::mem_fn(&gRPCConfigOper::Service::DeleteConfig), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      gRPCConfigOper_method_names[3],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< gRPCConfigOper::Service, ::IOSXRExtensibleManagabilityService::ConfigArgs, ::IOSXRExtensibleManagabilityService::ConfigReply>(
          std::mem_fn(&gRPCConfigOper::Service::ReplaceConfig), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      gRPCConfigOper_method_names[4],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< gRPCConfigOper::Service, ::IOSXRExtensibleManagabilityService::CliConfigArgs, ::IOSXRExtensibleManagabilityService::CliConfigReply>(
          std::mem_fn(&gRPCConfigOper::Service::CliConfig), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      gRPCConfigOper_method_names[5],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< gRPCConfigOper::Service, ::IOSXRExtensibleManagabilityService::CommitReplaceArgs, ::IOSXRExtensibleManagabilityService::CommitReplaceReply>(
          std::mem_fn(&gRPCConfigOper::Service::CommitReplace), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      gRPCConfigOper_method_names[6],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< gRPCConfigOper::Service, ::IOSXRExtensibleManagabilityService::CommitArgs, ::IOSXRExtensibleManagabilityService::CommitReply>(
          std::mem_fn(&gRPCConfigOper::Service::CommitConfig), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      gRPCConfigOper_method_names[7],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< gRPCConfigOper::Service, ::IOSXRExtensibleManagabilityService::DiscardChangesArgs, ::IOSXRExtensibleManagabilityService::DiscardChangesReply>(
          std::mem_fn(&gRPCConfigOper::Service::ConfigDiscardChanges), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      gRPCConfigOper_method_names[8],
      ::grpc::RpcMethod::SERVER_STREAMING,
      new ::grpc::ServerStreamingHandler< gRPCConfigOper::Service, ::IOSXRExtensibleManagabilityService::GetOperArgs, ::IOSXRExtensibleManagabilityService::GetOperReply>(
          std::mem_fn(&gRPCConfigOper::Service::GetOper), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      gRPCConfigOper_method_names[9],
      ::grpc::RpcMethod::SERVER_STREAMING,
      new ::grpc::ServerStreamingHandler< gRPCConfigOper::Service, ::IOSXRExtensibleManagabilityService::CreateSubsArgs, ::IOSXRExtensibleManagabilityService::CreateSubsReply>(
          std::mem_fn(&gRPCConfigOper::Service::CreateSubs), this)));
}

gRPCConfigOper::Service::~Service() {
}

::grpc::Status gRPCConfigOper::Service::GetConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigGetArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::ConfigGetReply>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status gRPCConfigOper::Service::MergeConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs* request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status gRPCConfigOper::Service::DeleteConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs* request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status gRPCConfigOper::Service::ReplaceConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs* request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status gRPCConfigOper::Service::CliConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CliConfigArgs* request, ::IOSXRExtensibleManagabilityService::CliConfigReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status gRPCConfigOper::Service::CommitReplace(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CommitReplaceArgs* request, ::IOSXRExtensibleManagabilityService::CommitReplaceReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status gRPCConfigOper::Service::CommitConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CommitArgs* request, ::IOSXRExtensibleManagabilityService::CommitReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status gRPCConfigOper::Service::ConfigDiscardChanges(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::DiscardChangesArgs* request, ::IOSXRExtensibleManagabilityService::DiscardChangesReply* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status gRPCConfigOper::Service::GetOper(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::GetOperArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::GetOperReply>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status gRPCConfigOper::Service::CreateSubs(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CreateSubsArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::CreateSubsReply>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


static const char* gRPCExec_method_names[] = {
  "/IOSXRExtensibleManagabilityService.gRPCExec/ShowCmdTextOutput",
  "/IOSXRExtensibleManagabilityService.gRPCExec/ShowCmdJSONOutput",
};

std::unique_ptr< gRPCExec::Stub> gRPCExec::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< gRPCExec::Stub> stub(new gRPCExec::Stub(channel));
  return stub;
}

gRPCExec::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_ShowCmdTextOutput_(gRPCExec_method_names[0], ::grpc::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_ShowCmdJSONOutput_(gRPCExec_method_names[1], ::grpc::RpcMethod::SERVER_STREAMING, channel)
  {}

::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>* gRPCExec::Stub::ShowCmdTextOutputRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request) {
  return new ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>(channel_.get(), rpcmethod_ShowCmdTextOutput_, context, request);
}

::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>* gRPCExec::Stub::AsyncShowCmdTextOutputRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request, ::grpc::CompletionQueue* cq, void* tag) {
  return new ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>(channel_.get(), cq, rpcmethod_ShowCmdTextOutput_, context, request, tag);
}

::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>* gRPCExec::Stub::ShowCmdJSONOutputRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request) {
  return new ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>(channel_.get(), rpcmethod_ShowCmdJSONOutput_, context, request);
}

::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>* gRPCExec::Stub::AsyncShowCmdJSONOutputRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request, ::grpc::CompletionQueue* cq, void* tag) {
  return new ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>(channel_.get(), cq, rpcmethod_ShowCmdJSONOutput_, context, request, tag);
}

gRPCExec::Service::Service() {
  (void)gRPCExec_method_names;
  AddMethod(new ::grpc::RpcServiceMethod(
      gRPCExec_method_names[0],
      ::grpc::RpcMethod::SERVER_STREAMING,
      new ::grpc::ServerStreamingHandler< gRPCExec::Service, ::IOSXRExtensibleManagabilityService::ShowCmdArgs, ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>(
          std::mem_fn(&gRPCExec::Service::ShowCmdTextOutput), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      gRPCExec_method_names[1],
      ::grpc::RpcMethod::SERVER_STREAMING,
      new ::grpc::ServerStreamingHandler< gRPCExec::Service, ::IOSXRExtensibleManagabilityService::ShowCmdArgs, ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>(
          std::mem_fn(&gRPCExec::Service::ShowCmdJSONOutput), this)));
}

gRPCExec::Service::~Service() {
}

::grpc::Status gRPCExec::Service::ShowCmdTextOutput(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status gRPCExec::Service::ShowCmdJSONOutput(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace IOSXRExtensibleManagabilityService

