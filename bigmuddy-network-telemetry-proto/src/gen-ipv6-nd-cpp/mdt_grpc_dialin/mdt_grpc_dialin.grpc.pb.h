// Generated by the gRPC protobuf plugin.
// If you make any local change, they will be lost.
// source: mdt_grpc_dialin/mdt_grpc_dialin.proto
#ifndef GRPC_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto__INCLUDED
#define GRPC_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto__INCLUDED

#include "mdt_grpc_dialin/mdt_grpc_dialin.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/proto_utils.h>
#include <grpc++/impl/codegen/rpc_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/status.h>
#include <grpc++/impl/codegen/stub_options.h>
#include <grpc++/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class RpcService;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace IOSXRExtensibleManagabilityService {

class gRPCConfigOper GRPC_FINAL {
 public:
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    std::unique_ptr< ::grpc::ClientReaderInterface< ::IOSXRExtensibleManagabilityService::ConfigGetReply>> GetConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigGetArgs& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::IOSXRExtensibleManagabilityService::ConfigGetReply>>(GetConfigRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::IOSXRExtensibleManagabilityService::ConfigGetReply>> AsyncGetConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigGetArgs& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::IOSXRExtensibleManagabilityService::ConfigGetReply>>(AsyncGetConfigRaw(context, request, cq, tag));
    }
    virtual ::grpc::Status MergeConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::ConfigReply>> AsyncMergeConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::ConfigReply>>(AsyncMergeConfigRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::ConfigReply>> AsyncDeleteConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::ConfigReply>>(AsyncDeleteConfigRaw(context, request, cq));
    }
    virtual ::grpc::Status ReplaceConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::ConfigReply>> AsyncReplaceConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::ConfigReply>>(AsyncReplaceConfigRaw(context, request, cq));
    }
    virtual ::grpc::Status CliConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CliConfigArgs& request, ::IOSXRExtensibleManagabilityService::CliConfigReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::CliConfigReply>> AsyncCliConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CliConfigArgs& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::CliConfigReply>>(AsyncCliConfigRaw(context, request, cq));
    }
    virtual ::grpc::Status CommitReplace(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitReplaceArgs& request, ::IOSXRExtensibleManagabilityService::CommitReplaceReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::CommitReplaceReply>> AsyncCommitReplace(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitReplaceArgs& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::CommitReplaceReply>>(AsyncCommitReplaceRaw(context, request, cq));
    }
    virtual ::grpc::Status CommitConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitArgs& request, ::IOSXRExtensibleManagabilityService::CommitReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::CommitReply>> AsyncCommitConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitArgs& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::CommitReply>>(AsyncCommitConfigRaw(context, request, cq));
    }
    virtual ::grpc::Status ConfigDiscardChanges(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::DiscardChangesArgs& request, ::IOSXRExtensibleManagabilityService::DiscardChangesReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::DiscardChangesReply>> AsyncConfigDiscardChanges(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::DiscardChangesArgs& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::DiscardChangesReply>>(AsyncConfigDiscardChangesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::IOSXRExtensibleManagabilityService::GetOperReply>> GetOper(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::GetOperArgs& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::IOSXRExtensibleManagabilityService::GetOperReply>>(GetOperRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::IOSXRExtensibleManagabilityService::GetOperReply>> AsyncGetOper(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::GetOperArgs& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::IOSXRExtensibleManagabilityService::GetOperReply>>(AsyncGetOperRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::IOSXRExtensibleManagabilityService::CreateSubsReply>> CreateSubs(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CreateSubsArgs& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::IOSXRExtensibleManagabilityService::CreateSubsReply>>(CreateSubsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::IOSXRExtensibleManagabilityService::CreateSubsReply>> AsyncCreateSubs(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CreateSubsArgs& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::IOSXRExtensibleManagabilityService::CreateSubsReply>>(AsyncCreateSubsRaw(context, request, cq, tag));
    }
  private:
    virtual ::grpc::ClientReaderInterface< ::IOSXRExtensibleManagabilityService::ConfigGetReply>* GetConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigGetArgs& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::IOSXRExtensibleManagabilityService::ConfigGetReply>* AsyncGetConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigGetArgs& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::ConfigReply>* AsyncMergeConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::ConfigReply>* AsyncDeleteConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::ConfigReply>* AsyncReplaceConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::CliConfigReply>* AsyncCliConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CliConfigArgs& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::CommitReplaceReply>* AsyncCommitReplaceRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitReplaceArgs& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::CommitReply>* AsyncCommitConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitArgs& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::IOSXRExtensibleManagabilityService::DiscardChangesReply>* AsyncConfigDiscardChangesRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::DiscardChangesArgs& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::IOSXRExtensibleManagabilityService::GetOperReply>* GetOperRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::GetOperArgs& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::IOSXRExtensibleManagabilityService::GetOperReply>* AsyncGetOperRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::GetOperArgs& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientReaderInterface< ::IOSXRExtensibleManagabilityService::CreateSubsReply>* CreateSubsRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CreateSubsArgs& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::IOSXRExtensibleManagabilityService::CreateSubsReply>* AsyncCreateSubsRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CreateSubsArgs& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
  };
  class Stub GRPC_FINAL : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    std::unique_ptr< ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::ConfigGetReply>> GetConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigGetArgs& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::ConfigGetReply>>(GetConfigRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::ConfigGetReply>> AsyncGetConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigGetArgs& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::ConfigGetReply>>(AsyncGetConfigRaw(context, request, cq, tag));
    }
    ::grpc::Status MergeConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) GRPC_OVERRIDE;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::ConfigReply>> AsyncMergeConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::ConfigReply>>(AsyncMergeConfigRaw(context, request, cq));
    }
    ::grpc::Status DeleteConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) GRPC_OVERRIDE;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::ConfigReply>> AsyncDeleteConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::ConfigReply>>(AsyncDeleteConfigRaw(context, request, cq));
    }
    ::grpc::Status ReplaceConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) GRPC_OVERRIDE;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::ConfigReply>> AsyncReplaceConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::ConfigReply>>(AsyncReplaceConfigRaw(context, request, cq));
    }
    ::grpc::Status CliConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CliConfigArgs& request, ::IOSXRExtensibleManagabilityService::CliConfigReply* response) GRPC_OVERRIDE;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::CliConfigReply>> AsyncCliConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CliConfigArgs& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::CliConfigReply>>(AsyncCliConfigRaw(context, request, cq));
    }
    ::grpc::Status CommitReplace(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitReplaceArgs& request, ::IOSXRExtensibleManagabilityService::CommitReplaceReply* response) GRPC_OVERRIDE;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::CommitReplaceReply>> AsyncCommitReplace(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitReplaceArgs& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::CommitReplaceReply>>(AsyncCommitReplaceRaw(context, request, cq));
    }
    ::grpc::Status CommitConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitArgs& request, ::IOSXRExtensibleManagabilityService::CommitReply* response) GRPC_OVERRIDE;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::CommitReply>> AsyncCommitConfig(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitArgs& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::CommitReply>>(AsyncCommitConfigRaw(context, request, cq));
    }
    ::grpc::Status ConfigDiscardChanges(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::DiscardChangesArgs& request, ::IOSXRExtensibleManagabilityService::DiscardChangesReply* response) GRPC_OVERRIDE;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::DiscardChangesReply>> AsyncConfigDiscardChanges(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::DiscardChangesArgs& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::DiscardChangesReply>>(AsyncConfigDiscardChangesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::GetOperReply>> GetOper(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::GetOperArgs& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::GetOperReply>>(GetOperRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::GetOperReply>> AsyncGetOper(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::GetOperArgs& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::GetOperReply>>(AsyncGetOperRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::CreateSubsReply>> CreateSubs(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CreateSubsArgs& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::CreateSubsReply>>(CreateSubsRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::CreateSubsReply>> AsyncCreateSubs(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CreateSubsArgs& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::CreateSubsReply>>(AsyncCreateSubsRaw(context, request, cq, tag));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::ConfigGetReply>* GetConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigGetArgs& request) GRPC_OVERRIDE;
    ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::ConfigGetReply>* AsyncGetConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigGetArgs& request, ::grpc::CompletionQueue* cq, void* tag) GRPC_OVERRIDE;
    ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::ConfigReply>* AsyncMergeConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::grpc::CompletionQueue* cq) GRPC_OVERRIDE;
    ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::ConfigReply>* AsyncDeleteConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::grpc::CompletionQueue* cq) GRPC_OVERRIDE;
    ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::ConfigReply>* AsyncReplaceConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs& request, ::grpc::CompletionQueue* cq) GRPC_OVERRIDE;
    ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::CliConfigReply>* AsyncCliConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CliConfigArgs& request, ::grpc::CompletionQueue* cq) GRPC_OVERRIDE;
    ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::CommitReplaceReply>* AsyncCommitReplaceRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitReplaceArgs& request, ::grpc::CompletionQueue* cq) GRPC_OVERRIDE;
    ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::CommitReply>* AsyncCommitConfigRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CommitArgs& request, ::grpc::CompletionQueue* cq) GRPC_OVERRIDE;
    ::grpc::ClientAsyncResponseReader< ::IOSXRExtensibleManagabilityService::DiscardChangesReply>* AsyncConfigDiscardChangesRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::DiscardChangesArgs& request, ::grpc::CompletionQueue* cq) GRPC_OVERRIDE;
    ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::GetOperReply>* GetOperRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::GetOperArgs& request) GRPC_OVERRIDE;
    ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::GetOperReply>* AsyncGetOperRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::GetOperArgs& request, ::grpc::CompletionQueue* cq, void* tag) GRPC_OVERRIDE;
    ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::CreateSubsReply>* CreateSubsRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CreateSubsArgs& request) GRPC_OVERRIDE;
    ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::CreateSubsReply>* AsyncCreateSubsRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::CreateSubsArgs& request, ::grpc::CompletionQueue* cq, void* tag) GRPC_OVERRIDE;
    const ::grpc::RpcMethod rpcmethod_GetConfig_;
    const ::grpc::RpcMethod rpcmethod_MergeConfig_;
    const ::grpc::RpcMethod rpcmethod_DeleteConfig_;
    const ::grpc::RpcMethod rpcmethod_ReplaceConfig_;
    const ::grpc::RpcMethod rpcmethod_CliConfig_;
    const ::grpc::RpcMethod rpcmethod_CommitReplace_;
    const ::grpc::RpcMethod rpcmethod_CommitConfig_;
    const ::grpc::RpcMethod rpcmethod_ConfigDiscardChanges_;
    const ::grpc::RpcMethod rpcmethod_GetOper_;
    const ::grpc::RpcMethod rpcmethod_CreateSubs_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status GetConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigGetArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::ConfigGetReply>* writer);
    virtual ::grpc::Status MergeConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs* request, ::IOSXRExtensibleManagabilityService::ConfigReply* response);
    virtual ::grpc::Status DeleteConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs* request, ::IOSXRExtensibleManagabilityService::ConfigReply* response);
    virtual ::grpc::Status ReplaceConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs* request, ::IOSXRExtensibleManagabilityService::ConfigReply* response);
    virtual ::grpc::Status CliConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CliConfigArgs* request, ::IOSXRExtensibleManagabilityService::CliConfigReply* response);
    virtual ::grpc::Status CommitReplace(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CommitReplaceArgs* request, ::IOSXRExtensibleManagabilityService::CommitReplaceReply* response);
    virtual ::grpc::Status CommitConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CommitArgs* request, ::IOSXRExtensibleManagabilityService::CommitReply* response);
    virtual ::grpc::Status ConfigDiscardChanges(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::DiscardChangesArgs* request, ::IOSXRExtensibleManagabilityService::DiscardChangesReply* response);
    virtual ::grpc::Status GetOper(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::GetOperArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::GetOperReply>* writer);
    virtual ::grpc::Status CreateSubs(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CreateSubsArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::CreateSubsReply>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithAsyncMethod_GetConfig() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetConfig() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigGetArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::ConfigGetReply>* writer) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConfig(::grpc::ServerContext* context, ::IOSXRExtensibleManagabilityService::ConfigGetArgs* request, ::grpc::ServerAsyncWriter< ::IOSXRExtensibleManagabilityService::ConfigGetReply>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(0, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MergeConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithAsyncMethod_MergeConfig() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_MergeConfig() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MergeConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs* request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMergeConfig(::grpc::ServerContext* context, ::IOSXRExtensibleManagabilityService::ConfigArgs* request, ::grpc::ServerAsyncResponseWriter< ::IOSXRExtensibleManagabilityService::ConfigReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithAsyncMethod_DeleteConfig() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DeleteConfig() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs* request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteConfig(::grpc::ServerContext* context, ::IOSXRExtensibleManagabilityService::ConfigArgs* request, ::grpc::ServerAsyncResponseWriter< ::IOSXRExtensibleManagabilityService::ConfigReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReplaceConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithAsyncMethod_ReplaceConfig() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ReplaceConfig() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs* request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReplaceConfig(::grpc::ServerContext* context, ::IOSXRExtensibleManagabilityService::ConfigArgs* request, ::grpc::ServerAsyncResponseWriter< ::IOSXRExtensibleManagabilityService::ConfigReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CliConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithAsyncMethod_CliConfig() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_CliConfig() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CliConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CliConfigArgs* request, ::IOSXRExtensibleManagabilityService::CliConfigReply* response) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCliConfig(::grpc::ServerContext* context, ::IOSXRExtensibleManagabilityService::CliConfigArgs* request, ::grpc::ServerAsyncResponseWriter< ::IOSXRExtensibleManagabilityService::CliConfigReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CommitReplace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithAsyncMethod_CommitReplace() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_CommitReplace() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CommitReplace(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CommitReplaceArgs* request, ::IOSXRExtensibleManagabilityService::CommitReplaceReply* response) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCommitReplace(::grpc::ServerContext* context, ::IOSXRExtensibleManagabilityService::CommitReplaceArgs* request, ::grpc::ServerAsyncResponseWriter< ::IOSXRExtensibleManagabilityService::CommitReplaceReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CommitConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithAsyncMethod_CommitConfig() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_CommitConfig() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CommitConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CommitArgs* request, ::IOSXRExtensibleManagabilityService::CommitReply* response) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCommitConfig(::grpc::ServerContext* context, ::IOSXRExtensibleManagabilityService::CommitArgs* request, ::grpc::ServerAsyncResponseWriter< ::IOSXRExtensibleManagabilityService::CommitReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ConfigDiscardChanges : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithAsyncMethod_ConfigDiscardChanges() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ConfigDiscardChanges() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfigDiscardChanges(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::DiscardChangesArgs* request, ::IOSXRExtensibleManagabilityService::DiscardChangesReply* response) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConfigDiscardChanges(::grpc::ServerContext* context, ::IOSXRExtensibleManagabilityService::DiscardChangesArgs* request, ::grpc::ServerAsyncResponseWriter< ::IOSXRExtensibleManagabilityService::DiscardChangesReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOper : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithAsyncMethod_GetOper() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetOper() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOper(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::GetOperArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::GetOperReply>* writer) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOper(::grpc::ServerContext* context, ::IOSXRExtensibleManagabilityService::GetOperArgs* request, ::grpc::ServerAsyncWriter< ::IOSXRExtensibleManagabilityService::GetOperReply>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(8, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateSubs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithAsyncMethod_CreateSubs() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_CreateSubs() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSubs(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CreateSubsArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::CreateSubsReply>* writer) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateSubs(::grpc::ServerContext* context, ::IOSXRExtensibleManagabilityService::CreateSubsArgs* request, ::grpc::ServerAsyncWriter< ::IOSXRExtensibleManagabilityService::CreateSubsReply>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(9, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetConfig<WithAsyncMethod_MergeConfig<WithAsyncMethod_DeleteConfig<WithAsyncMethod_ReplaceConfig<WithAsyncMethod_CliConfig<WithAsyncMethod_CommitReplace<WithAsyncMethod_CommitConfig<WithAsyncMethod_ConfigDiscardChanges<WithAsyncMethod_GetOper<WithAsyncMethod_CreateSubs<Service > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_GetConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithGenericMethod_GetConfig() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetConfig() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigGetArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::ConfigGetReply>* writer) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MergeConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithGenericMethod_MergeConfig() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_MergeConfig() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MergeConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs* request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithGenericMethod_DeleteConfig() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DeleteConfig() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs* request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReplaceConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithGenericMethod_ReplaceConfig() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ReplaceConfig() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ConfigArgs* request, ::IOSXRExtensibleManagabilityService::ConfigReply* response) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CliConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithGenericMethod_CliConfig() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_CliConfig() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CliConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CliConfigArgs* request, ::IOSXRExtensibleManagabilityService::CliConfigReply* response) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CommitReplace : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithGenericMethod_CommitReplace() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_CommitReplace() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CommitReplace(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CommitReplaceArgs* request, ::IOSXRExtensibleManagabilityService::CommitReplaceReply* response) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CommitConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithGenericMethod_CommitConfig() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_CommitConfig() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CommitConfig(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CommitArgs* request, ::IOSXRExtensibleManagabilityService::CommitReply* response) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ConfigDiscardChanges : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithGenericMethod_ConfigDiscardChanges() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ConfigDiscardChanges() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfigDiscardChanges(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::DiscardChangesArgs* request, ::IOSXRExtensibleManagabilityService::DiscardChangesReply* response) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOper : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithGenericMethod_GetOper() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetOper() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOper(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::GetOperArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::GetOperReply>* writer) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateSubs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithGenericMethod_CreateSubs() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_CreateSubs() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateSubs(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::CreateSubsArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::CreateSubsReply>* writer) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
};

class gRPCExec GRPC_FINAL {
 public:
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    std::unique_ptr< ::grpc::ClientReaderInterface< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>> ShowCmdTextOutput(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>>(ShowCmdTextOutputRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>> AsyncShowCmdTextOutput(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>>(AsyncShowCmdTextOutputRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>> ShowCmdJSONOutput(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>>(ShowCmdJSONOutputRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>> AsyncShowCmdJSONOutput(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>>(AsyncShowCmdJSONOutputRaw(context, request, cq, tag));
    }
  private:
    virtual ::grpc::ClientReaderInterface< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>* ShowCmdTextOutputRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>* AsyncShowCmdTextOutputRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientReaderInterface< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>* ShowCmdJSONOutputRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>* AsyncShowCmdJSONOutputRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
  };
  class Stub GRPC_FINAL : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    std::unique_ptr< ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>> ShowCmdTextOutput(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>>(ShowCmdTextOutputRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>> AsyncShowCmdTextOutput(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>>(AsyncShowCmdTextOutputRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>> ShowCmdJSONOutput(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>>(ShowCmdJSONOutputRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>> AsyncShowCmdJSONOutput(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>>(AsyncShowCmdJSONOutputRaw(context, request, cq, tag));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>* ShowCmdTextOutputRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request) GRPC_OVERRIDE;
    ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>* AsyncShowCmdTextOutputRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request, ::grpc::CompletionQueue* cq, void* tag) GRPC_OVERRIDE;
    ::grpc::ClientReader< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>* ShowCmdJSONOutputRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request) GRPC_OVERRIDE;
    ::grpc::ClientAsyncReader< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>* AsyncShowCmdJSONOutputRaw(::grpc::ClientContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs& request, ::grpc::CompletionQueue* cq, void* tag) GRPC_OVERRIDE;
    const ::grpc::RpcMethod rpcmethod_ShowCmdTextOutput_;
    const ::grpc::RpcMethod rpcmethod_ShowCmdJSONOutput_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status ShowCmdTextOutput(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>* writer);
    virtual ::grpc::Status ShowCmdJSONOutput(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_ShowCmdTextOutput : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithAsyncMethod_ShowCmdTextOutput() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ShowCmdTextOutput() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowCmdTextOutput(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>* writer) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowCmdTextOutput(::grpc::ServerContext* context, ::IOSXRExtensibleManagabilityService::ShowCmdArgs* request, ::grpc::ServerAsyncWriter< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(0, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ShowCmdJSONOutput : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithAsyncMethod_ShowCmdJSONOutput() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ShowCmdJSONOutput() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowCmdJSONOutput(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>* writer) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowCmdJSONOutput(::grpc::ServerContext* context, ::IOSXRExtensibleManagabilityService::ShowCmdArgs* request, ::grpc::ServerAsyncWriter< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ShowCmdTextOutput<WithAsyncMethod_ShowCmdJSONOutput<Service > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_ShowCmdTextOutput : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithGenericMethod_ShowCmdTextOutput() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ShowCmdTextOutput() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowCmdTextOutput(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::ShowCmdTextReply>* writer) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ShowCmdJSONOutput : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(Service *service) {}
   public:
    WithGenericMethod_ShowCmdJSONOutput() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ShowCmdJSONOutput() GRPC_OVERRIDE {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowCmdJSONOutput(::grpc::ServerContext* context, const ::IOSXRExtensibleManagabilityService::ShowCmdArgs* request, ::grpc::ServerWriter< ::IOSXRExtensibleManagabilityService::ShowCmdJSONReply>* writer) GRPC_FINAL GRPC_OVERRIDE {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
};

}  // namespace IOSXRExtensibleManagabilityService


#endif  // GRPC_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto__INCLUDED
