// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mdt_grpc_dialout/mdt_grpc_dialout.proto

#include "mdt_grpc_dialout/mdt_grpc_dialout.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace mdt_dialout {
class MdtDialoutArgsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MdtDialoutArgs>
      _instance;
} _MdtDialoutArgs_default_instance_;
}  // namespace mdt_dialout
namespace protobuf_mdt_5fgrpc_5fdialout_2fmdt_5fgrpc_5fdialout_2eproto {
void InitDefaultsMdtDialoutArgsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::mdt_dialout::_MdtDialoutArgs_default_instance_;
    new (ptr) ::mdt_dialout::MdtDialoutArgs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mdt_dialout::MdtDialoutArgs::InitAsDefaultInstance();
}

void InitDefaultsMdtDialoutArgs() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMdtDialoutArgsImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mdt_dialout::MdtDialoutArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mdt_dialout::MdtDialoutArgs, reqid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mdt_dialout::MdtDialoutArgs, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mdt_dialout::MdtDialoutArgs, errors_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mdt_dialout::MdtDialoutArgs)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mdt_dialout::_MdtDialoutArgs_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mdt_grpc_dialout/mdt_grpc_dialout.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\'mdt_grpc_dialout/mdt_grpc_dialout.prot"
      "o\022\013mdt_dialout\"=\n\016MdtDialoutArgs\022\r\n\005ReqI"
      "d\030\001 \001(\003\022\014\n\004data\030\002 \001(\014\022\016\n\006errors\030\003 \001(\t2^\n"
      "\016gRPCMdtDialout\022L\n\nMdtDialout\022\033.mdt_dial"
      "out.MdtDialoutArgs\032\033.mdt_dialout.MdtDial"
      "outArgs\"\000(\0010\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 221);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mdt_grpc_dialout/mdt_grpc_dialout.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mdt_5fgrpc_5fdialout_2fmdt_5fgrpc_5fdialout_2eproto
namespace mdt_dialout {

// ===================================================================

void MdtDialoutArgs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MdtDialoutArgs::kReqIdFieldNumber;
const int MdtDialoutArgs::kDataFieldNumber;
const int MdtDialoutArgs::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MdtDialoutArgs::MdtDialoutArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mdt_5fgrpc_5fdialout_2fmdt_5fgrpc_5fdialout_2eproto::InitDefaultsMdtDialoutArgs();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mdt_dialout.MdtDialoutArgs)
}
MdtDialoutArgs::MdtDialoutArgs(const MdtDialoutArgs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  errors_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errors().size() > 0) {
    errors_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errors_);
  }
  reqid_ = from.reqid_;
  // @@protoc_insertion_point(copy_constructor:mdt_dialout.MdtDialoutArgs)
}

void MdtDialoutArgs::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errors_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqid_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

MdtDialoutArgs::~MdtDialoutArgs() {
  // @@protoc_insertion_point(destructor:mdt_dialout.MdtDialoutArgs)
  SharedDtor();
}

void MdtDialoutArgs::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errors_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MdtDialoutArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MdtDialoutArgs::descriptor() {
  ::protobuf_mdt_5fgrpc_5fdialout_2fmdt_5fgrpc_5fdialout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mdt_5fgrpc_5fdialout_2fmdt_5fgrpc_5fdialout_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MdtDialoutArgs& MdtDialoutArgs::default_instance() {
  ::protobuf_mdt_5fgrpc_5fdialout_2fmdt_5fgrpc_5fdialout_2eproto::InitDefaultsMdtDialoutArgs();
  return *internal_default_instance();
}

MdtDialoutArgs* MdtDialoutArgs::New(::google::protobuf::Arena* arena) const {
  MdtDialoutArgs* n = new MdtDialoutArgs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MdtDialoutArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:mdt_dialout.MdtDialoutArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errors_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqid_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool MdtDialoutArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mdt_dialout.MdtDialoutArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 ReqId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reqid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errors = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errors()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errors().data(), static_cast<int>(this->errors().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mdt_dialout.MdtDialoutArgs.errors"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mdt_dialout.MdtDialoutArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mdt_dialout.MdtDialoutArgs)
  return false;
#undef DO_
}

void MdtDialoutArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mdt_dialout.MdtDialoutArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ReqId = 1;
  if (this->reqid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->reqid(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // string errors = 3;
  if (this->errors().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errors().data(), static_cast<int>(this->errors().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mdt_dialout.MdtDialoutArgs.errors");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errors(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mdt_dialout.MdtDialoutArgs)
}

::google::protobuf::uint8* MdtDialoutArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mdt_dialout.MdtDialoutArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 ReqId = 1;
  if (this->reqid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->reqid(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // string errors = 3;
  if (this->errors().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errors().data(), static_cast<int>(this->errors().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mdt_dialout.MdtDialoutArgs.errors");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errors(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mdt_dialout.MdtDialoutArgs)
  return target;
}

size_t MdtDialoutArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mdt_dialout.MdtDialoutArgs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string errors = 3;
  if (this->errors().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errors());
  }

  // int64 ReqId = 1;
  if (this->reqid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->reqid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MdtDialoutArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mdt_dialout.MdtDialoutArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const MdtDialoutArgs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MdtDialoutArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mdt_dialout.MdtDialoutArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mdt_dialout.MdtDialoutArgs)
    MergeFrom(*source);
  }
}

void MdtDialoutArgs::MergeFrom(const MdtDialoutArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mdt_dialout.MdtDialoutArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.errors().size() > 0) {

    errors_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errors_);
  }
  if (from.reqid() != 0) {
    set_reqid(from.reqid());
  }
}

void MdtDialoutArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mdt_dialout.MdtDialoutArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MdtDialoutArgs::CopyFrom(const MdtDialoutArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mdt_dialout.MdtDialoutArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MdtDialoutArgs::IsInitialized() const {
  return true;
}

void MdtDialoutArgs::Swap(MdtDialoutArgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MdtDialoutArgs::InternalSwap(MdtDialoutArgs* other) {
  using std::swap;
  data_.Swap(&other->data_);
  errors_.Swap(&other->errors_);
  swap(reqid_, other->reqid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MdtDialoutArgs::GetMetadata() const {
  protobuf_mdt_5fgrpc_5fdialout_2fmdt_5fgrpc_5fdialout_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mdt_5fgrpc_5fdialout_2fmdt_5fgrpc_5fdialout_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mdt_dialout

// @@protoc_insertion_point(global_scope)
