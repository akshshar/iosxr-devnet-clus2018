// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mdt_grpc_dialin/mdt_grpc_dialin.proto

#ifndef PROTOBUF_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto__INCLUDED
#define PROTOBUF_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[20];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsConfigGetArgsImpl();
void InitDefaultsConfigGetArgs();
void InitDefaultsConfigGetReplyImpl();
void InitDefaultsConfigGetReply();
void InitDefaultsGetOperArgsImpl();
void InitDefaultsGetOperArgs();
void InitDefaultsGetOperReplyImpl();
void InitDefaultsGetOperReply();
void InitDefaultsConfigArgsImpl();
void InitDefaultsConfigArgs();
void InitDefaultsConfigReplyImpl();
void InitDefaultsConfigReply();
void InitDefaultsCliConfigArgsImpl();
void InitDefaultsCliConfigArgs();
void InitDefaultsCliConfigReplyImpl();
void InitDefaultsCliConfigReply();
void InitDefaultsCommitReplaceArgsImpl();
void InitDefaultsCommitReplaceArgs();
void InitDefaultsCommitReplaceReplyImpl();
void InitDefaultsCommitReplaceReply();
void InitDefaultsCommitMsgImpl();
void InitDefaultsCommitMsg();
void InitDefaultsCommitArgsImpl();
void InitDefaultsCommitArgs();
void InitDefaultsCommitReplyImpl();
void InitDefaultsCommitReply();
void InitDefaultsDiscardChangesArgsImpl();
void InitDefaultsDiscardChangesArgs();
void InitDefaultsDiscardChangesReplyImpl();
void InitDefaultsDiscardChangesReply();
void InitDefaultsShowCmdArgsImpl();
void InitDefaultsShowCmdArgs();
void InitDefaultsShowCmdTextReplyImpl();
void InitDefaultsShowCmdTextReply();
void InitDefaultsShowCmdJSONReplyImpl();
void InitDefaultsShowCmdJSONReply();
void InitDefaultsCreateSubsArgsImpl();
void InitDefaultsCreateSubsArgs();
void InitDefaultsCreateSubsReplyImpl();
void InitDefaultsCreateSubsReply();
inline void InitDefaults() {
  InitDefaultsConfigGetArgs();
  InitDefaultsConfigGetReply();
  InitDefaultsGetOperArgs();
  InitDefaultsGetOperReply();
  InitDefaultsConfigArgs();
  InitDefaultsConfigReply();
  InitDefaultsCliConfigArgs();
  InitDefaultsCliConfigReply();
  InitDefaultsCommitReplaceArgs();
  InitDefaultsCommitReplaceReply();
  InitDefaultsCommitMsg();
  InitDefaultsCommitArgs();
  InitDefaultsCommitReply();
  InitDefaultsDiscardChangesArgs();
  InitDefaultsDiscardChangesReply();
  InitDefaultsShowCmdArgs();
  InitDefaultsShowCmdTextReply();
  InitDefaultsShowCmdJSONReply();
  InitDefaultsCreateSubsArgs();
  InitDefaultsCreateSubsReply();
}
}  // namespace protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto
namespace IOSXRExtensibleManagabilityService {
class CliConfigArgs;
class CliConfigArgsDefaultTypeInternal;
extern CliConfigArgsDefaultTypeInternal _CliConfigArgs_default_instance_;
class CliConfigReply;
class CliConfigReplyDefaultTypeInternal;
extern CliConfigReplyDefaultTypeInternal _CliConfigReply_default_instance_;
class CommitArgs;
class CommitArgsDefaultTypeInternal;
extern CommitArgsDefaultTypeInternal _CommitArgs_default_instance_;
class CommitMsg;
class CommitMsgDefaultTypeInternal;
extern CommitMsgDefaultTypeInternal _CommitMsg_default_instance_;
class CommitReplaceArgs;
class CommitReplaceArgsDefaultTypeInternal;
extern CommitReplaceArgsDefaultTypeInternal _CommitReplaceArgs_default_instance_;
class CommitReplaceReply;
class CommitReplaceReplyDefaultTypeInternal;
extern CommitReplaceReplyDefaultTypeInternal _CommitReplaceReply_default_instance_;
class CommitReply;
class CommitReplyDefaultTypeInternal;
extern CommitReplyDefaultTypeInternal _CommitReply_default_instance_;
class ConfigArgs;
class ConfigArgsDefaultTypeInternal;
extern ConfigArgsDefaultTypeInternal _ConfigArgs_default_instance_;
class ConfigGetArgs;
class ConfigGetArgsDefaultTypeInternal;
extern ConfigGetArgsDefaultTypeInternal _ConfigGetArgs_default_instance_;
class ConfigGetReply;
class ConfigGetReplyDefaultTypeInternal;
extern ConfigGetReplyDefaultTypeInternal _ConfigGetReply_default_instance_;
class ConfigReply;
class ConfigReplyDefaultTypeInternal;
extern ConfigReplyDefaultTypeInternal _ConfigReply_default_instance_;
class CreateSubsArgs;
class CreateSubsArgsDefaultTypeInternal;
extern CreateSubsArgsDefaultTypeInternal _CreateSubsArgs_default_instance_;
class CreateSubsReply;
class CreateSubsReplyDefaultTypeInternal;
extern CreateSubsReplyDefaultTypeInternal _CreateSubsReply_default_instance_;
class DiscardChangesArgs;
class DiscardChangesArgsDefaultTypeInternal;
extern DiscardChangesArgsDefaultTypeInternal _DiscardChangesArgs_default_instance_;
class DiscardChangesReply;
class DiscardChangesReplyDefaultTypeInternal;
extern DiscardChangesReplyDefaultTypeInternal _DiscardChangesReply_default_instance_;
class GetOperArgs;
class GetOperArgsDefaultTypeInternal;
extern GetOperArgsDefaultTypeInternal _GetOperArgs_default_instance_;
class GetOperReply;
class GetOperReplyDefaultTypeInternal;
extern GetOperReplyDefaultTypeInternal _GetOperReply_default_instance_;
class ShowCmdArgs;
class ShowCmdArgsDefaultTypeInternal;
extern ShowCmdArgsDefaultTypeInternal _ShowCmdArgs_default_instance_;
class ShowCmdJSONReply;
class ShowCmdJSONReplyDefaultTypeInternal;
extern ShowCmdJSONReplyDefaultTypeInternal _ShowCmdJSONReply_default_instance_;
class ShowCmdTextReply;
class ShowCmdTextReplyDefaultTypeInternal;
extern ShowCmdTextReplyDefaultTypeInternal _ShowCmdTextReply_default_instance_;
}  // namespace IOSXRExtensibleManagabilityService
namespace IOSXRExtensibleManagabilityService {

enum CommitResult {
  CHANGE = 0,
  NO_CHANGE = 1,
  FAIL = 2,
  CommitResult_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CommitResult_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CommitResult_IsValid(int value);
const CommitResult CommitResult_MIN = CHANGE;
const CommitResult CommitResult_MAX = FAIL;
const int CommitResult_ARRAYSIZE = CommitResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommitResult_descriptor();
inline const ::std::string& CommitResult_Name(CommitResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommitResult_descriptor(), value);
}
inline bool CommitResult_Parse(
    const ::std::string& name, CommitResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommitResult>(
    CommitResult_descriptor(), name, value);
}
// ===================================================================

class ConfigGetArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.ConfigGetArgs) */ {
 public:
  ConfigGetArgs();
  virtual ~ConfigGetArgs();

  ConfigGetArgs(const ConfigGetArgs& from);

  inline ConfigGetArgs& operator=(const ConfigGetArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGetArgs(ConfigGetArgs&& from) noexcept
    : ConfigGetArgs() {
    *this = ::std::move(from);
  }

  inline ConfigGetArgs& operator=(ConfigGetArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGetArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGetArgs* internal_default_instance() {
    return reinterpret_cast<const ConfigGetArgs*>(
               &_ConfigGetArgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ConfigGetArgs* other);
  friend void swap(ConfigGetArgs& a, ConfigGetArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGetArgs* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigGetArgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigGetArgs& from);
  void MergeFrom(const ConfigGetArgs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigGetArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string yangpathjson = 2;
  void clear_yangpathjson();
  static const int kYangpathjsonFieldNumber = 2;
  const ::std::string& yangpathjson() const;
  void set_yangpathjson(const ::std::string& value);
  #if LANG_CXX11
  void set_yangpathjson(::std::string&& value);
  #endif
  void set_yangpathjson(const char* value);
  void set_yangpathjson(const char* value, size_t size);
  ::std::string* mutable_yangpathjson();
  ::std::string* release_yangpathjson();
  void set_allocated_yangpathjson(::std::string* yangpathjson);

  // int64 ReqId = 1;
  void clear_reqid();
  static const int kReqIdFieldNumber = 1;
  ::google::protobuf::int64 reqid() const;
  void set_reqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.ConfigGetArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr yangpathjson_;
  ::google::protobuf::int64 reqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsConfigGetArgsImpl();
};
// -------------------------------------------------------------------

class ConfigGetReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.ConfigGetReply) */ {
 public:
  ConfigGetReply();
  virtual ~ConfigGetReply();

  ConfigGetReply(const ConfigGetReply& from);

  inline ConfigGetReply& operator=(const ConfigGetReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigGetReply(ConfigGetReply&& from) noexcept
    : ConfigGetReply() {
    *this = ::std::move(from);
  }

  inline ConfigGetReply& operator=(ConfigGetReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigGetReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigGetReply* internal_default_instance() {
    return reinterpret_cast<const ConfigGetReply*>(
               &_ConfigGetReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ConfigGetReply* other);
  friend void swap(ConfigGetReply& a, ConfigGetReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigGetReply* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigGetReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigGetReply& from);
  void MergeFrom(const ConfigGetReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigGetReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string yangjson = 2;
  void clear_yangjson();
  static const int kYangjsonFieldNumber = 2;
  const ::std::string& yangjson() const;
  void set_yangjson(const ::std::string& value);
  #if LANG_CXX11
  void set_yangjson(::std::string&& value);
  #endif
  void set_yangjson(const char* value);
  void set_yangjson(const char* value, size_t size);
  ::std::string* mutable_yangjson();
  ::std::string* release_yangjson();
  void set_allocated_yangjson(::std::string* yangjson);

  // string errors = 3;
  void clear_errors();
  static const int kErrorsFieldNumber = 3;
  const ::std::string& errors() const;
  void set_errors(const ::std::string& value);
  #if LANG_CXX11
  void set_errors(::std::string&& value);
  #endif
  void set_errors(const char* value);
  void set_errors(const char* value, size_t size);
  ::std::string* mutable_errors();
  ::std::string* release_errors();
  void set_allocated_errors(::std::string* errors);

  // int64 ResReqId = 1;
  void clear_resreqid();
  static const int kResReqIdFieldNumber = 1;
  ::google::protobuf::int64 resreqid() const;
  void set_resreqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.ConfigGetReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr yangjson_;
  ::google::protobuf::internal::ArenaStringPtr errors_;
  ::google::protobuf::int64 resreqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsConfigGetReplyImpl();
};
// -------------------------------------------------------------------

class GetOperArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.GetOperArgs) */ {
 public:
  GetOperArgs();
  virtual ~GetOperArgs();

  GetOperArgs(const GetOperArgs& from);

  inline GetOperArgs& operator=(const GetOperArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetOperArgs(GetOperArgs&& from) noexcept
    : GetOperArgs() {
    *this = ::std::move(from);
  }

  inline GetOperArgs& operator=(GetOperArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOperArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetOperArgs* internal_default_instance() {
    return reinterpret_cast<const GetOperArgs*>(
               &_GetOperArgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GetOperArgs* other);
  friend void swap(GetOperArgs& a, GetOperArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetOperArgs* New() const PROTOBUF_FINAL { return New(NULL); }

  GetOperArgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOperArgs& from);
  void MergeFrom(const GetOperArgs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOperArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string yangpathjson = 2;
  void clear_yangpathjson();
  static const int kYangpathjsonFieldNumber = 2;
  const ::std::string& yangpathjson() const;
  void set_yangpathjson(const ::std::string& value);
  #if LANG_CXX11
  void set_yangpathjson(::std::string&& value);
  #endif
  void set_yangpathjson(const char* value);
  void set_yangpathjson(const char* value, size_t size);
  ::std::string* mutable_yangpathjson();
  ::std::string* release_yangpathjson();
  void set_allocated_yangpathjson(::std::string* yangpathjson);

  // int64 ReqId = 1;
  void clear_reqid();
  static const int kReqIdFieldNumber = 1;
  ::google::protobuf::int64 reqid() const;
  void set_reqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.GetOperArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr yangpathjson_;
  ::google::protobuf::int64 reqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsGetOperArgsImpl();
};
// -------------------------------------------------------------------

class GetOperReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.GetOperReply) */ {
 public:
  GetOperReply();
  virtual ~GetOperReply();

  GetOperReply(const GetOperReply& from);

  inline GetOperReply& operator=(const GetOperReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetOperReply(GetOperReply&& from) noexcept
    : GetOperReply() {
    *this = ::std::move(from);
  }

  inline GetOperReply& operator=(GetOperReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOperReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetOperReply* internal_default_instance() {
    return reinterpret_cast<const GetOperReply*>(
               &_GetOperReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GetOperReply* other);
  friend void swap(GetOperReply& a, GetOperReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetOperReply* New() const PROTOBUF_FINAL { return New(NULL); }

  GetOperReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOperReply& from);
  void MergeFrom(const GetOperReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOperReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string yangjson = 2;
  void clear_yangjson();
  static const int kYangjsonFieldNumber = 2;
  const ::std::string& yangjson() const;
  void set_yangjson(const ::std::string& value);
  #if LANG_CXX11
  void set_yangjson(::std::string&& value);
  #endif
  void set_yangjson(const char* value);
  void set_yangjson(const char* value, size_t size);
  ::std::string* mutable_yangjson();
  ::std::string* release_yangjson();
  void set_allocated_yangjson(::std::string* yangjson);

  // string errors = 3;
  void clear_errors();
  static const int kErrorsFieldNumber = 3;
  const ::std::string& errors() const;
  void set_errors(const ::std::string& value);
  #if LANG_CXX11
  void set_errors(::std::string&& value);
  #endif
  void set_errors(const char* value);
  void set_errors(const char* value, size_t size);
  ::std::string* mutable_errors();
  ::std::string* release_errors();
  void set_allocated_errors(::std::string* errors);

  // int64 ResReqId = 1;
  void clear_resreqid();
  static const int kResReqIdFieldNumber = 1;
  ::google::protobuf::int64 resreqid() const;
  void set_resreqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.GetOperReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr yangjson_;
  ::google::protobuf::internal::ArenaStringPtr errors_;
  ::google::protobuf::int64 resreqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsGetOperReplyImpl();
};
// -------------------------------------------------------------------

class ConfigArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.ConfigArgs) */ {
 public:
  ConfigArgs();
  virtual ~ConfigArgs();

  ConfigArgs(const ConfigArgs& from);

  inline ConfigArgs& operator=(const ConfigArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigArgs(ConfigArgs&& from) noexcept
    : ConfigArgs() {
    *this = ::std::move(from);
  }

  inline ConfigArgs& operator=(ConfigArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigArgs* internal_default_instance() {
    return reinterpret_cast<const ConfigArgs*>(
               &_ConfigArgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ConfigArgs* other);
  friend void swap(ConfigArgs& a, ConfigArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigArgs* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigArgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigArgs& from);
  void MergeFrom(const ConfigArgs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string yangjson = 2;
  void clear_yangjson();
  static const int kYangjsonFieldNumber = 2;
  const ::std::string& yangjson() const;
  void set_yangjson(const ::std::string& value);
  #if LANG_CXX11
  void set_yangjson(::std::string&& value);
  #endif
  void set_yangjson(const char* value);
  void set_yangjson(const char* value, size_t size);
  ::std::string* mutable_yangjson();
  ::std::string* release_yangjson();
  void set_allocated_yangjson(::std::string* yangjson);

  // int64 ReqId = 1;
  void clear_reqid();
  static const int kReqIdFieldNumber = 1;
  ::google::protobuf::int64 reqid() const;
  void set_reqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.ConfigArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr yangjson_;
  ::google::protobuf::int64 reqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsConfigArgsImpl();
};
// -------------------------------------------------------------------

class ConfigReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.ConfigReply) */ {
 public:
  ConfigReply();
  virtual ~ConfigReply();

  ConfigReply(const ConfigReply& from);

  inline ConfigReply& operator=(const ConfigReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigReply(ConfigReply&& from) noexcept
    : ConfigReply() {
    *this = ::std::move(from);
  }

  inline ConfigReply& operator=(ConfigReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigReply* internal_default_instance() {
    return reinterpret_cast<const ConfigReply*>(
               &_ConfigReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ConfigReply* other);
  friend void swap(ConfigReply& a, ConfigReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigReply* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigReply& from);
  void MergeFrom(const ConfigReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errors = 2;
  void clear_errors();
  static const int kErrorsFieldNumber = 2;
  const ::std::string& errors() const;
  void set_errors(const ::std::string& value);
  #if LANG_CXX11
  void set_errors(::std::string&& value);
  #endif
  void set_errors(const char* value);
  void set_errors(const char* value, size_t size);
  ::std::string* mutable_errors();
  ::std::string* release_errors();
  void set_allocated_errors(::std::string* errors);

  // int64 ResReqId = 1;
  void clear_resreqid();
  static const int kResReqIdFieldNumber = 1;
  ::google::protobuf::int64 resreqid() const;
  void set_resreqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.ConfigReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errors_;
  ::google::protobuf::int64 resreqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsConfigReplyImpl();
};
// -------------------------------------------------------------------

class CliConfigArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.CliConfigArgs) */ {
 public:
  CliConfigArgs();
  virtual ~CliConfigArgs();

  CliConfigArgs(const CliConfigArgs& from);

  inline CliConfigArgs& operator=(const CliConfigArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CliConfigArgs(CliConfigArgs&& from) noexcept
    : CliConfigArgs() {
    *this = ::std::move(from);
  }

  inline CliConfigArgs& operator=(CliConfigArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CliConfigArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CliConfigArgs* internal_default_instance() {
    return reinterpret_cast<const CliConfigArgs*>(
               &_CliConfigArgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CliConfigArgs* other);
  friend void swap(CliConfigArgs& a, CliConfigArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CliConfigArgs* New() const PROTOBUF_FINAL { return New(NULL); }

  CliConfigArgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CliConfigArgs& from);
  void MergeFrom(const CliConfigArgs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CliConfigArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cli = 2;
  void clear_cli();
  static const int kCliFieldNumber = 2;
  const ::std::string& cli() const;
  void set_cli(const ::std::string& value);
  #if LANG_CXX11
  void set_cli(::std::string&& value);
  #endif
  void set_cli(const char* value);
  void set_cli(const char* value, size_t size);
  ::std::string* mutable_cli();
  ::std::string* release_cli();
  void set_allocated_cli(::std::string* cli);

  // int64 ReqId = 1;
  void clear_reqid();
  static const int kReqIdFieldNumber = 1;
  ::google::protobuf::int64 reqid() const;
  void set_reqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.CliConfigArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cli_;
  ::google::protobuf::int64 reqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsCliConfigArgsImpl();
};
// -------------------------------------------------------------------

class CliConfigReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.CliConfigReply) */ {
 public:
  CliConfigReply();
  virtual ~CliConfigReply();

  CliConfigReply(const CliConfigReply& from);

  inline CliConfigReply& operator=(const CliConfigReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CliConfigReply(CliConfigReply&& from) noexcept
    : CliConfigReply() {
    *this = ::std::move(from);
  }

  inline CliConfigReply& operator=(CliConfigReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CliConfigReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CliConfigReply* internal_default_instance() {
    return reinterpret_cast<const CliConfigReply*>(
               &_CliConfigReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CliConfigReply* other);
  friend void swap(CliConfigReply& a, CliConfigReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CliConfigReply* New() const PROTOBUF_FINAL { return New(NULL); }

  CliConfigReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CliConfigReply& from);
  void MergeFrom(const CliConfigReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CliConfigReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errors = 2;
  void clear_errors();
  static const int kErrorsFieldNumber = 2;
  const ::std::string& errors() const;
  void set_errors(const ::std::string& value);
  #if LANG_CXX11
  void set_errors(::std::string&& value);
  #endif
  void set_errors(const char* value);
  void set_errors(const char* value, size_t size);
  ::std::string* mutable_errors();
  ::std::string* release_errors();
  void set_allocated_errors(::std::string* errors);

  // int64 ResReqId = 1;
  void clear_resreqid();
  static const int kResReqIdFieldNumber = 1;
  ::google::protobuf::int64 resreqid() const;
  void set_resreqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.CliConfigReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errors_;
  ::google::protobuf::int64 resreqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsCliConfigReplyImpl();
};
// -------------------------------------------------------------------

class CommitReplaceArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.CommitReplaceArgs) */ {
 public:
  CommitReplaceArgs();
  virtual ~CommitReplaceArgs();

  CommitReplaceArgs(const CommitReplaceArgs& from);

  inline CommitReplaceArgs& operator=(const CommitReplaceArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommitReplaceArgs(CommitReplaceArgs&& from) noexcept
    : CommitReplaceArgs() {
    *this = ::std::move(from);
  }

  inline CommitReplaceArgs& operator=(CommitReplaceArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommitReplaceArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommitReplaceArgs* internal_default_instance() {
    return reinterpret_cast<const CommitReplaceArgs*>(
               &_CommitReplaceArgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CommitReplaceArgs* other);
  friend void swap(CommitReplaceArgs& a, CommitReplaceArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommitReplaceArgs* New() const PROTOBUF_FINAL { return New(NULL); }

  CommitReplaceArgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommitReplaceArgs& from);
  void MergeFrom(const CommitReplaceArgs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommitReplaceArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cli = 2;
  void clear_cli();
  static const int kCliFieldNumber = 2;
  const ::std::string& cli() const;
  void set_cli(const ::std::string& value);
  #if LANG_CXX11
  void set_cli(::std::string&& value);
  #endif
  void set_cli(const char* value);
  void set_cli(const char* value, size_t size);
  ::std::string* mutable_cli();
  ::std::string* release_cli();
  void set_allocated_cli(::std::string* cli);

  // string yangjson = 3;
  void clear_yangjson();
  static const int kYangjsonFieldNumber = 3;
  const ::std::string& yangjson() const;
  void set_yangjson(const ::std::string& value);
  #if LANG_CXX11
  void set_yangjson(::std::string&& value);
  #endif
  void set_yangjson(const char* value);
  void set_yangjson(const char* value, size_t size);
  ::std::string* mutable_yangjson();
  ::std::string* release_yangjson();
  void set_allocated_yangjson(::std::string* yangjson);

  // int64 ReqId = 1;
  void clear_reqid();
  static const int kReqIdFieldNumber = 1;
  ::google::protobuf::int64 reqid() const;
  void set_reqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.CommitReplaceArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cli_;
  ::google::protobuf::internal::ArenaStringPtr yangjson_;
  ::google::protobuf::int64 reqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsCommitReplaceArgsImpl();
};
// -------------------------------------------------------------------

class CommitReplaceReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.CommitReplaceReply) */ {
 public:
  CommitReplaceReply();
  virtual ~CommitReplaceReply();

  CommitReplaceReply(const CommitReplaceReply& from);

  inline CommitReplaceReply& operator=(const CommitReplaceReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommitReplaceReply(CommitReplaceReply&& from) noexcept
    : CommitReplaceReply() {
    *this = ::std::move(from);
  }

  inline CommitReplaceReply& operator=(CommitReplaceReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommitReplaceReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommitReplaceReply* internal_default_instance() {
    return reinterpret_cast<const CommitReplaceReply*>(
               &_CommitReplaceReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CommitReplaceReply* other);
  friend void swap(CommitReplaceReply& a, CommitReplaceReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommitReplaceReply* New() const PROTOBUF_FINAL { return New(NULL); }

  CommitReplaceReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommitReplaceReply& from);
  void MergeFrom(const CommitReplaceReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommitReplaceReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errors = 2;
  void clear_errors();
  static const int kErrorsFieldNumber = 2;
  const ::std::string& errors() const;
  void set_errors(const ::std::string& value);
  #if LANG_CXX11
  void set_errors(::std::string&& value);
  #endif
  void set_errors(const char* value);
  void set_errors(const char* value, size_t size);
  ::std::string* mutable_errors();
  ::std::string* release_errors();
  void set_allocated_errors(::std::string* errors);

  // int64 ResReqId = 1;
  void clear_resreqid();
  static const int kResReqIdFieldNumber = 1;
  ::google::protobuf::int64 resreqid() const;
  void set_resreqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.CommitReplaceReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errors_;
  ::google::protobuf::int64 resreqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsCommitReplaceReplyImpl();
};
// -------------------------------------------------------------------

class CommitMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.CommitMsg) */ {
 public:
  CommitMsg();
  virtual ~CommitMsg();

  CommitMsg(const CommitMsg& from);

  inline CommitMsg& operator=(const CommitMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommitMsg(CommitMsg&& from) noexcept
    : CommitMsg() {
    *this = ::std::move(from);
  }

  inline CommitMsg& operator=(CommitMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommitMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommitMsg* internal_default_instance() {
    return reinterpret_cast<const CommitMsg*>(
               &_CommitMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CommitMsg* other);
  friend void swap(CommitMsg& a, CommitMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommitMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  CommitMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommitMsg& from);
  void MergeFrom(const CommitMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommitMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string label = 1;
  void clear_label();
  static const int kLabelFieldNumber = 1;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  #if LANG_CXX11
  void set_label(::std::string&& value);
  #endif
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // string comment = 2;
  void clear_comment();
  static const int kCommentFieldNumber = 2;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.CommitMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsCommitMsgImpl();
};
// -------------------------------------------------------------------

class CommitArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.CommitArgs) */ {
 public:
  CommitArgs();
  virtual ~CommitArgs();

  CommitArgs(const CommitArgs& from);

  inline CommitArgs& operator=(const CommitArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommitArgs(CommitArgs&& from) noexcept
    : CommitArgs() {
    *this = ::std::move(from);
  }

  inline CommitArgs& operator=(CommitArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommitArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommitArgs* internal_default_instance() {
    return reinterpret_cast<const CommitArgs*>(
               &_CommitArgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CommitArgs* other);
  friend void swap(CommitArgs& a, CommitArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommitArgs* New() const PROTOBUF_FINAL { return New(NULL); }

  CommitArgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommitArgs& from);
  void MergeFrom(const CommitArgs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommitArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .IOSXRExtensibleManagabilityService.CommitMsg msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::IOSXRExtensibleManagabilityService::CommitMsg& msg() const;
  ::IOSXRExtensibleManagabilityService::CommitMsg* release_msg();
  ::IOSXRExtensibleManagabilityService::CommitMsg* mutable_msg();
  void set_allocated_msg(::IOSXRExtensibleManagabilityService::CommitMsg* msg);

  // int64 ReqId = 2;
  void clear_reqid();
  static const int kReqIdFieldNumber = 2;
  ::google::protobuf::int64 reqid() const;
  void set_reqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.CommitArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::IOSXRExtensibleManagabilityService::CommitMsg* msg_;
  ::google::protobuf::int64 reqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsCommitArgsImpl();
};
// -------------------------------------------------------------------

class CommitReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.CommitReply) */ {
 public:
  CommitReply();
  virtual ~CommitReply();

  CommitReply(const CommitReply& from);

  inline CommitReply& operator=(const CommitReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommitReply(CommitReply&& from) noexcept
    : CommitReply() {
    *this = ::std::move(from);
  }

  inline CommitReply& operator=(CommitReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommitReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommitReply* internal_default_instance() {
    return reinterpret_cast<const CommitReply*>(
               &_CommitReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CommitReply* other);
  friend void swap(CommitReply& a, CommitReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommitReply* New() const PROTOBUF_FINAL { return New(NULL); }

  CommitReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommitReply& from);
  void MergeFrom(const CommitReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommitReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errors = 3;
  void clear_errors();
  static const int kErrorsFieldNumber = 3;
  const ::std::string& errors() const;
  void set_errors(const ::std::string& value);
  #if LANG_CXX11
  void set_errors(::std::string&& value);
  #endif
  void set_errors(const char* value);
  void set_errors(const char* value, size_t size);
  ::std::string* mutable_errors();
  ::std::string* release_errors();
  void set_allocated_errors(::std::string* errors);

  // int64 ResReqId = 2;
  void clear_resreqid();
  static const int kResReqIdFieldNumber = 2;
  ::google::protobuf::int64 resreqid() const;
  void set_resreqid(::google::protobuf::int64 value);

  // .IOSXRExtensibleManagabilityService.CommitResult result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::IOSXRExtensibleManagabilityService::CommitResult result() const;
  void set_result(::IOSXRExtensibleManagabilityService::CommitResult value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.CommitReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errors_;
  ::google::protobuf::int64 resreqid_;
  int result_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsCommitReplyImpl();
};
// -------------------------------------------------------------------

class DiscardChangesArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.DiscardChangesArgs) */ {
 public:
  DiscardChangesArgs();
  virtual ~DiscardChangesArgs();

  DiscardChangesArgs(const DiscardChangesArgs& from);

  inline DiscardChangesArgs& operator=(const DiscardChangesArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DiscardChangesArgs(DiscardChangesArgs&& from) noexcept
    : DiscardChangesArgs() {
    *this = ::std::move(from);
  }

  inline DiscardChangesArgs& operator=(DiscardChangesArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DiscardChangesArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DiscardChangesArgs* internal_default_instance() {
    return reinterpret_cast<const DiscardChangesArgs*>(
               &_DiscardChangesArgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(DiscardChangesArgs* other);
  friend void swap(DiscardChangesArgs& a, DiscardChangesArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DiscardChangesArgs* New() const PROTOBUF_FINAL { return New(NULL); }

  DiscardChangesArgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DiscardChangesArgs& from);
  void MergeFrom(const DiscardChangesArgs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DiscardChangesArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 ReqId = 1;
  void clear_reqid();
  static const int kReqIdFieldNumber = 1;
  ::google::protobuf::int64 reqid() const;
  void set_reqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.DiscardChangesArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 reqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsDiscardChangesArgsImpl();
};
// -------------------------------------------------------------------

class DiscardChangesReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.DiscardChangesReply) */ {
 public:
  DiscardChangesReply();
  virtual ~DiscardChangesReply();

  DiscardChangesReply(const DiscardChangesReply& from);

  inline DiscardChangesReply& operator=(const DiscardChangesReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DiscardChangesReply(DiscardChangesReply&& from) noexcept
    : DiscardChangesReply() {
    *this = ::std::move(from);
  }

  inline DiscardChangesReply& operator=(DiscardChangesReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DiscardChangesReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DiscardChangesReply* internal_default_instance() {
    return reinterpret_cast<const DiscardChangesReply*>(
               &_DiscardChangesReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(DiscardChangesReply* other);
  friend void swap(DiscardChangesReply& a, DiscardChangesReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DiscardChangesReply* New() const PROTOBUF_FINAL { return New(NULL); }

  DiscardChangesReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DiscardChangesReply& from);
  void MergeFrom(const DiscardChangesReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DiscardChangesReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string errors = 2;
  void clear_errors();
  static const int kErrorsFieldNumber = 2;
  const ::std::string& errors() const;
  void set_errors(const ::std::string& value);
  #if LANG_CXX11
  void set_errors(::std::string&& value);
  #endif
  void set_errors(const char* value);
  void set_errors(const char* value, size_t size);
  ::std::string* mutable_errors();
  ::std::string* release_errors();
  void set_allocated_errors(::std::string* errors);

  // int64 ResReqId = 1;
  void clear_resreqid();
  static const int kResReqIdFieldNumber = 1;
  ::google::protobuf::int64 resreqid() const;
  void set_resreqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.DiscardChangesReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errors_;
  ::google::protobuf::int64 resreqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsDiscardChangesReplyImpl();
};
// -------------------------------------------------------------------

class ShowCmdArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.ShowCmdArgs) */ {
 public:
  ShowCmdArgs();
  virtual ~ShowCmdArgs();

  ShowCmdArgs(const ShowCmdArgs& from);

  inline ShowCmdArgs& operator=(const ShowCmdArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowCmdArgs(ShowCmdArgs&& from) noexcept
    : ShowCmdArgs() {
    *this = ::std::move(from);
  }

  inline ShowCmdArgs& operator=(ShowCmdArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowCmdArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShowCmdArgs* internal_default_instance() {
    return reinterpret_cast<const ShowCmdArgs*>(
               &_ShowCmdArgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(ShowCmdArgs* other);
  friend void swap(ShowCmdArgs& a, ShowCmdArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowCmdArgs* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowCmdArgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShowCmdArgs& from);
  void MergeFrom(const ShowCmdArgs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShowCmdArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cli = 2;
  void clear_cli();
  static const int kCliFieldNumber = 2;
  const ::std::string& cli() const;
  void set_cli(const ::std::string& value);
  #if LANG_CXX11
  void set_cli(::std::string&& value);
  #endif
  void set_cli(const char* value);
  void set_cli(const char* value, size_t size);
  ::std::string* mutable_cli();
  ::std::string* release_cli();
  void set_allocated_cli(::std::string* cli);

  // int64 ReqId = 1;
  void clear_reqid();
  static const int kReqIdFieldNumber = 1;
  ::google::protobuf::int64 reqid() const;
  void set_reqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.ShowCmdArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cli_;
  ::google::protobuf::int64 reqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsShowCmdArgsImpl();
};
// -------------------------------------------------------------------

class ShowCmdTextReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.ShowCmdTextReply) */ {
 public:
  ShowCmdTextReply();
  virtual ~ShowCmdTextReply();

  ShowCmdTextReply(const ShowCmdTextReply& from);

  inline ShowCmdTextReply& operator=(const ShowCmdTextReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowCmdTextReply(ShowCmdTextReply&& from) noexcept
    : ShowCmdTextReply() {
    *this = ::std::move(from);
  }

  inline ShowCmdTextReply& operator=(ShowCmdTextReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowCmdTextReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShowCmdTextReply* internal_default_instance() {
    return reinterpret_cast<const ShowCmdTextReply*>(
               &_ShowCmdTextReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(ShowCmdTextReply* other);
  friend void swap(ShowCmdTextReply& a, ShowCmdTextReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowCmdTextReply* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowCmdTextReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShowCmdTextReply& from);
  void MergeFrom(const ShowCmdTextReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShowCmdTextReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string output = 2;
  void clear_output();
  static const int kOutputFieldNumber = 2;
  const ::std::string& output() const;
  void set_output(const ::std::string& value);
  #if LANG_CXX11
  void set_output(::std::string&& value);
  #endif
  void set_output(const char* value);
  void set_output(const char* value, size_t size);
  ::std::string* mutable_output();
  ::std::string* release_output();
  void set_allocated_output(::std::string* output);

  // string errors = 3;
  void clear_errors();
  static const int kErrorsFieldNumber = 3;
  const ::std::string& errors() const;
  void set_errors(const ::std::string& value);
  #if LANG_CXX11
  void set_errors(::std::string&& value);
  #endif
  void set_errors(const char* value);
  void set_errors(const char* value, size_t size);
  ::std::string* mutable_errors();
  ::std::string* release_errors();
  void set_allocated_errors(::std::string* errors);

  // int64 ResReqId = 1;
  void clear_resreqid();
  static const int kResReqIdFieldNumber = 1;
  ::google::protobuf::int64 resreqid() const;
  void set_resreqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.ShowCmdTextReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr output_;
  ::google::protobuf::internal::ArenaStringPtr errors_;
  ::google::protobuf::int64 resreqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsShowCmdTextReplyImpl();
};
// -------------------------------------------------------------------

class ShowCmdJSONReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.ShowCmdJSONReply) */ {
 public:
  ShowCmdJSONReply();
  virtual ~ShowCmdJSONReply();

  ShowCmdJSONReply(const ShowCmdJSONReply& from);

  inline ShowCmdJSONReply& operator=(const ShowCmdJSONReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ShowCmdJSONReply(ShowCmdJSONReply&& from) noexcept
    : ShowCmdJSONReply() {
    *this = ::std::move(from);
  }

  inline ShowCmdJSONReply& operator=(ShowCmdJSONReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowCmdJSONReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShowCmdJSONReply* internal_default_instance() {
    return reinterpret_cast<const ShowCmdJSONReply*>(
               &_ShowCmdJSONReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(ShowCmdJSONReply* other);
  friend void swap(ShowCmdJSONReply& a, ShowCmdJSONReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ShowCmdJSONReply* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowCmdJSONReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShowCmdJSONReply& from);
  void MergeFrom(const ShowCmdJSONReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShowCmdJSONReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string jsonoutput = 2;
  void clear_jsonoutput();
  static const int kJsonoutputFieldNumber = 2;
  const ::std::string& jsonoutput() const;
  void set_jsonoutput(const ::std::string& value);
  #if LANG_CXX11
  void set_jsonoutput(::std::string&& value);
  #endif
  void set_jsonoutput(const char* value);
  void set_jsonoutput(const char* value, size_t size);
  ::std::string* mutable_jsonoutput();
  ::std::string* release_jsonoutput();
  void set_allocated_jsonoutput(::std::string* jsonoutput);

  // string errors = 3;
  void clear_errors();
  static const int kErrorsFieldNumber = 3;
  const ::std::string& errors() const;
  void set_errors(const ::std::string& value);
  #if LANG_CXX11
  void set_errors(::std::string&& value);
  #endif
  void set_errors(const char* value);
  void set_errors(const char* value, size_t size);
  ::std::string* mutable_errors();
  ::std::string* release_errors();
  void set_allocated_errors(::std::string* errors);

  // int64 ResReqId = 1;
  void clear_resreqid();
  static const int kResReqIdFieldNumber = 1;
  ::google::protobuf::int64 resreqid() const;
  void set_resreqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.ShowCmdJSONReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr jsonoutput_;
  ::google::protobuf::internal::ArenaStringPtr errors_;
  ::google::protobuf::int64 resreqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsShowCmdJSONReplyImpl();
};
// -------------------------------------------------------------------

class CreateSubsArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.CreateSubsArgs) */ {
 public:
  CreateSubsArgs();
  virtual ~CreateSubsArgs();

  CreateSubsArgs(const CreateSubsArgs& from);

  inline CreateSubsArgs& operator=(const CreateSubsArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateSubsArgs(CreateSubsArgs&& from) noexcept
    : CreateSubsArgs() {
    *this = ::std::move(from);
  }

  inline CreateSubsArgs& operator=(CreateSubsArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateSubsArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateSubsArgs* internal_default_instance() {
    return reinterpret_cast<const CreateSubsArgs*>(
               &_CreateSubsArgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CreateSubsArgs* other);
  friend void swap(CreateSubsArgs& a, CreateSubsArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateSubsArgs* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateSubsArgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateSubsArgs& from);
  void MergeFrom(const CreateSubsArgs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateSubsArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string subidstr = 3;
  void clear_subidstr();
  static const int kSubidstrFieldNumber = 3;
  const ::std::string& subidstr() const;
  void set_subidstr(const ::std::string& value);
  #if LANG_CXX11
  void set_subidstr(::std::string&& value);
  #endif
  void set_subidstr(const char* value);
  void set_subidstr(const char* value, size_t size);
  ::std::string* mutable_subidstr();
  ::std::string* release_subidstr();
  void set_allocated_subidstr(::std::string* subidstr);

  // int64 ReqId = 1;
  void clear_reqid();
  static const int kReqIdFieldNumber = 1;
  ::google::protobuf::int64 reqid() const;
  void set_reqid(::google::protobuf::int64 value);

  // int64 encode = 2;
  void clear_encode();
  static const int kEncodeFieldNumber = 2;
  ::google::protobuf::int64 encode() const;
  void set_encode(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.CreateSubsArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr subidstr_;
  ::google::protobuf::int64 reqid_;
  ::google::protobuf::int64 encode_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsCreateSubsArgsImpl();
};
// -------------------------------------------------------------------

class CreateSubsReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IOSXRExtensibleManagabilityService.CreateSubsReply) */ {
 public:
  CreateSubsReply();
  virtual ~CreateSubsReply();

  CreateSubsReply(const CreateSubsReply& from);

  inline CreateSubsReply& operator=(const CreateSubsReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateSubsReply(CreateSubsReply&& from) noexcept
    : CreateSubsReply() {
    *this = ::std::move(from);
  }

  inline CreateSubsReply& operator=(CreateSubsReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateSubsReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateSubsReply* internal_default_instance() {
    return reinterpret_cast<const CreateSubsReply*>(
               &_CreateSubsReply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(CreateSubsReply* other);
  friend void swap(CreateSubsReply& a, CreateSubsReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateSubsReply* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateSubsReply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateSubsReply& from);
  void MergeFrom(const CreateSubsReply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateSubsReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // string errors = 3;
  void clear_errors();
  static const int kErrorsFieldNumber = 3;
  const ::std::string& errors() const;
  void set_errors(const ::std::string& value);
  #if LANG_CXX11
  void set_errors(::std::string&& value);
  #endif
  void set_errors(const char* value);
  void set_errors(const char* value, size_t size);
  ::std::string* mutable_errors();
  ::std::string* release_errors();
  void set_allocated_errors(::std::string* errors);

  // int64 ResReqId = 1;
  void clear_resreqid();
  static const int kResReqIdFieldNumber = 1;
  ::google::protobuf::int64 resreqid() const;
  void set_resreqid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:IOSXRExtensibleManagabilityService.CreateSubsReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr errors_;
  ::google::protobuf::int64 resreqid_;
  mutable int _cached_size_;
  friend struct ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::TableStruct;
  friend void ::protobuf_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto::InitDefaultsCreateSubsReplyImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConfigGetArgs

// int64 ReqId = 1;
inline void ConfigGetArgs::clear_reqid() {
  reqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ConfigGetArgs::reqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ConfigGetArgs.ReqId)
  return reqid_;
}
inline void ConfigGetArgs::set_reqid(::google::protobuf::int64 value) {
  
  reqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ConfigGetArgs.ReqId)
}

// string yangpathjson = 2;
inline void ConfigGetArgs::clear_yangpathjson() {
  yangpathjson_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigGetArgs::yangpathjson() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ConfigGetArgs.yangpathjson)
  return yangpathjson_.GetNoArena();
}
inline void ConfigGetArgs::set_yangpathjson(const ::std::string& value) {
  
  yangpathjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ConfigGetArgs.yangpathjson)
}
#if LANG_CXX11
inline void ConfigGetArgs::set_yangpathjson(::std::string&& value) {
  
  yangpathjson_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.ConfigGetArgs.yangpathjson)
}
#endif
inline void ConfigGetArgs::set_yangpathjson(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  yangpathjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.ConfigGetArgs.yangpathjson)
}
inline void ConfigGetArgs::set_yangpathjson(const char* value, size_t size) {
  
  yangpathjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.ConfigGetArgs.yangpathjson)
}
inline ::std::string* ConfigGetArgs::mutable_yangpathjson() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.ConfigGetArgs.yangpathjson)
  return yangpathjson_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigGetArgs::release_yangpathjson() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.ConfigGetArgs.yangpathjson)
  
  return yangpathjson_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigGetArgs::set_allocated_yangpathjson(::std::string* yangpathjson) {
  if (yangpathjson != NULL) {
    
  } else {
    
  }
  yangpathjson_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), yangpathjson);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.ConfigGetArgs.yangpathjson)
}

// -------------------------------------------------------------------

// ConfigGetReply

// int64 ResReqId = 1;
inline void ConfigGetReply::clear_resreqid() {
  resreqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ConfigGetReply::resreqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ConfigGetReply.ResReqId)
  return resreqid_;
}
inline void ConfigGetReply::set_resreqid(::google::protobuf::int64 value) {
  
  resreqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ConfigGetReply.ResReqId)
}

// string yangjson = 2;
inline void ConfigGetReply::clear_yangjson() {
  yangjson_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigGetReply::yangjson() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ConfigGetReply.yangjson)
  return yangjson_.GetNoArena();
}
inline void ConfigGetReply::set_yangjson(const ::std::string& value) {
  
  yangjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ConfigGetReply.yangjson)
}
#if LANG_CXX11
inline void ConfigGetReply::set_yangjson(::std::string&& value) {
  
  yangjson_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.ConfigGetReply.yangjson)
}
#endif
inline void ConfigGetReply::set_yangjson(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  yangjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.ConfigGetReply.yangjson)
}
inline void ConfigGetReply::set_yangjson(const char* value, size_t size) {
  
  yangjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.ConfigGetReply.yangjson)
}
inline ::std::string* ConfigGetReply::mutable_yangjson() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.ConfigGetReply.yangjson)
  return yangjson_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigGetReply::release_yangjson() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.ConfigGetReply.yangjson)
  
  return yangjson_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigGetReply::set_allocated_yangjson(::std::string* yangjson) {
  if (yangjson != NULL) {
    
  } else {
    
  }
  yangjson_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), yangjson);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.ConfigGetReply.yangjson)
}

// string errors = 3;
inline void ConfigGetReply::clear_errors() {
  errors_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigGetReply::errors() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ConfigGetReply.errors)
  return errors_.GetNoArena();
}
inline void ConfigGetReply::set_errors(const ::std::string& value) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ConfigGetReply.errors)
}
#if LANG_CXX11
inline void ConfigGetReply::set_errors(::std::string&& value) {
  
  errors_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.ConfigGetReply.errors)
}
#endif
inline void ConfigGetReply::set_errors(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.ConfigGetReply.errors)
}
inline void ConfigGetReply::set_errors(const char* value, size_t size) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.ConfigGetReply.errors)
}
inline ::std::string* ConfigGetReply::mutable_errors() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.ConfigGetReply.errors)
  return errors_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigGetReply::release_errors() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.ConfigGetReply.errors)
  
  return errors_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigGetReply::set_allocated_errors(::std::string* errors) {
  if (errors != NULL) {
    
  } else {
    
  }
  errors_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errors);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.ConfigGetReply.errors)
}

// -------------------------------------------------------------------

// GetOperArgs

// int64 ReqId = 1;
inline void GetOperArgs::clear_reqid() {
  reqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetOperArgs::reqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.GetOperArgs.ReqId)
  return reqid_;
}
inline void GetOperArgs::set_reqid(::google::protobuf::int64 value) {
  
  reqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.GetOperArgs.ReqId)
}

// string yangpathjson = 2;
inline void GetOperArgs::clear_yangpathjson() {
  yangpathjson_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetOperArgs::yangpathjson() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.GetOperArgs.yangpathjson)
  return yangpathjson_.GetNoArena();
}
inline void GetOperArgs::set_yangpathjson(const ::std::string& value) {
  
  yangpathjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.GetOperArgs.yangpathjson)
}
#if LANG_CXX11
inline void GetOperArgs::set_yangpathjson(::std::string&& value) {
  
  yangpathjson_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.GetOperArgs.yangpathjson)
}
#endif
inline void GetOperArgs::set_yangpathjson(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  yangpathjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.GetOperArgs.yangpathjson)
}
inline void GetOperArgs::set_yangpathjson(const char* value, size_t size) {
  
  yangpathjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.GetOperArgs.yangpathjson)
}
inline ::std::string* GetOperArgs::mutable_yangpathjson() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.GetOperArgs.yangpathjson)
  return yangpathjson_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetOperArgs::release_yangpathjson() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.GetOperArgs.yangpathjson)
  
  return yangpathjson_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetOperArgs::set_allocated_yangpathjson(::std::string* yangpathjson) {
  if (yangpathjson != NULL) {
    
  } else {
    
  }
  yangpathjson_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), yangpathjson);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.GetOperArgs.yangpathjson)
}

// -------------------------------------------------------------------

// GetOperReply

// int64 ResReqId = 1;
inline void GetOperReply::clear_resreqid() {
  resreqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetOperReply::resreqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.GetOperReply.ResReqId)
  return resreqid_;
}
inline void GetOperReply::set_resreqid(::google::protobuf::int64 value) {
  
  resreqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.GetOperReply.ResReqId)
}

// string yangjson = 2;
inline void GetOperReply::clear_yangjson() {
  yangjson_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetOperReply::yangjson() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.GetOperReply.yangjson)
  return yangjson_.GetNoArena();
}
inline void GetOperReply::set_yangjson(const ::std::string& value) {
  
  yangjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.GetOperReply.yangjson)
}
#if LANG_CXX11
inline void GetOperReply::set_yangjson(::std::string&& value) {
  
  yangjson_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.GetOperReply.yangjson)
}
#endif
inline void GetOperReply::set_yangjson(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  yangjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.GetOperReply.yangjson)
}
inline void GetOperReply::set_yangjson(const char* value, size_t size) {
  
  yangjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.GetOperReply.yangjson)
}
inline ::std::string* GetOperReply::mutable_yangjson() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.GetOperReply.yangjson)
  return yangjson_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetOperReply::release_yangjson() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.GetOperReply.yangjson)
  
  return yangjson_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetOperReply::set_allocated_yangjson(::std::string* yangjson) {
  if (yangjson != NULL) {
    
  } else {
    
  }
  yangjson_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), yangjson);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.GetOperReply.yangjson)
}

// string errors = 3;
inline void GetOperReply::clear_errors() {
  errors_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetOperReply::errors() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.GetOperReply.errors)
  return errors_.GetNoArena();
}
inline void GetOperReply::set_errors(const ::std::string& value) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.GetOperReply.errors)
}
#if LANG_CXX11
inline void GetOperReply::set_errors(::std::string&& value) {
  
  errors_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.GetOperReply.errors)
}
#endif
inline void GetOperReply::set_errors(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.GetOperReply.errors)
}
inline void GetOperReply::set_errors(const char* value, size_t size) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.GetOperReply.errors)
}
inline ::std::string* GetOperReply::mutable_errors() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.GetOperReply.errors)
  return errors_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetOperReply::release_errors() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.GetOperReply.errors)
  
  return errors_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetOperReply::set_allocated_errors(::std::string* errors) {
  if (errors != NULL) {
    
  } else {
    
  }
  errors_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errors);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.GetOperReply.errors)
}

// -------------------------------------------------------------------

// ConfigArgs

// int64 ReqId = 1;
inline void ConfigArgs::clear_reqid() {
  reqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ConfigArgs::reqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ConfigArgs.ReqId)
  return reqid_;
}
inline void ConfigArgs::set_reqid(::google::protobuf::int64 value) {
  
  reqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ConfigArgs.ReqId)
}

// string yangjson = 2;
inline void ConfigArgs::clear_yangjson() {
  yangjson_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigArgs::yangjson() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ConfigArgs.yangjson)
  return yangjson_.GetNoArena();
}
inline void ConfigArgs::set_yangjson(const ::std::string& value) {
  
  yangjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ConfigArgs.yangjson)
}
#if LANG_CXX11
inline void ConfigArgs::set_yangjson(::std::string&& value) {
  
  yangjson_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.ConfigArgs.yangjson)
}
#endif
inline void ConfigArgs::set_yangjson(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  yangjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.ConfigArgs.yangjson)
}
inline void ConfigArgs::set_yangjson(const char* value, size_t size) {
  
  yangjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.ConfigArgs.yangjson)
}
inline ::std::string* ConfigArgs::mutable_yangjson() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.ConfigArgs.yangjson)
  return yangjson_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigArgs::release_yangjson() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.ConfigArgs.yangjson)
  
  return yangjson_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigArgs::set_allocated_yangjson(::std::string* yangjson) {
  if (yangjson != NULL) {
    
  } else {
    
  }
  yangjson_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), yangjson);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.ConfigArgs.yangjson)
}

// -------------------------------------------------------------------

// ConfigReply

// int64 ResReqId = 1;
inline void ConfigReply::clear_resreqid() {
  resreqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ConfigReply::resreqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ConfigReply.ResReqId)
  return resreqid_;
}
inline void ConfigReply::set_resreqid(::google::protobuf::int64 value) {
  
  resreqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ConfigReply.ResReqId)
}

// string errors = 2;
inline void ConfigReply::clear_errors() {
  errors_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigReply::errors() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ConfigReply.errors)
  return errors_.GetNoArena();
}
inline void ConfigReply::set_errors(const ::std::string& value) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ConfigReply.errors)
}
#if LANG_CXX11
inline void ConfigReply::set_errors(::std::string&& value) {
  
  errors_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.ConfigReply.errors)
}
#endif
inline void ConfigReply::set_errors(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.ConfigReply.errors)
}
inline void ConfigReply::set_errors(const char* value, size_t size) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.ConfigReply.errors)
}
inline ::std::string* ConfigReply::mutable_errors() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.ConfigReply.errors)
  return errors_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigReply::release_errors() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.ConfigReply.errors)
  
  return errors_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigReply::set_allocated_errors(::std::string* errors) {
  if (errors != NULL) {
    
  } else {
    
  }
  errors_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errors);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.ConfigReply.errors)
}

// -------------------------------------------------------------------

// CliConfigArgs

// int64 ReqId = 1;
inline void CliConfigArgs::clear_reqid() {
  reqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CliConfigArgs::reqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CliConfigArgs.ReqId)
  return reqid_;
}
inline void CliConfigArgs::set_reqid(::google::protobuf::int64 value) {
  
  reqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CliConfigArgs.ReqId)
}

// string cli = 2;
inline void CliConfigArgs::clear_cli() {
  cli_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CliConfigArgs::cli() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CliConfigArgs.cli)
  return cli_.GetNoArena();
}
inline void CliConfigArgs::set_cli(const ::std::string& value) {
  
  cli_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CliConfigArgs.cli)
}
#if LANG_CXX11
inline void CliConfigArgs::set_cli(::std::string&& value) {
  
  cli_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.CliConfigArgs.cli)
}
#endif
inline void CliConfigArgs::set_cli(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cli_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.CliConfigArgs.cli)
}
inline void CliConfigArgs::set_cli(const char* value, size_t size) {
  
  cli_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.CliConfigArgs.cli)
}
inline ::std::string* CliConfigArgs::mutable_cli() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.CliConfigArgs.cli)
  return cli_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CliConfigArgs::release_cli() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.CliConfigArgs.cli)
  
  return cli_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CliConfigArgs::set_allocated_cli(::std::string* cli) {
  if (cli != NULL) {
    
  } else {
    
  }
  cli_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cli);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.CliConfigArgs.cli)
}

// -------------------------------------------------------------------

// CliConfigReply

// int64 ResReqId = 1;
inline void CliConfigReply::clear_resreqid() {
  resreqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CliConfigReply::resreqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CliConfigReply.ResReqId)
  return resreqid_;
}
inline void CliConfigReply::set_resreqid(::google::protobuf::int64 value) {
  
  resreqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CliConfigReply.ResReqId)
}

// string errors = 2;
inline void CliConfigReply::clear_errors() {
  errors_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CliConfigReply::errors() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CliConfigReply.errors)
  return errors_.GetNoArena();
}
inline void CliConfigReply::set_errors(const ::std::string& value) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CliConfigReply.errors)
}
#if LANG_CXX11
inline void CliConfigReply::set_errors(::std::string&& value) {
  
  errors_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.CliConfigReply.errors)
}
#endif
inline void CliConfigReply::set_errors(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.CliConfigReply.errors)
}
inline void CliConfigReply::set_errors(const char* value, size_t size) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.CliConfigReply.errors)
}
inline ::std::string* CliConfigReply::mutable_errors() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.CliConfigReply.errors)
  return errors_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CliConfigReply::release_errors() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.CliConfigReply.errors)
  
  return errors_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CliConfigReply::set_allocated_errors(::std::string* errors) {
  if (errors != NULL) {
    
  } else {
    
  }
  errors_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errors);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.CliConfigReply.errors)
}

// -------------------------------------------------------------------

// CommitReplaceArgs

// int64 ReqId = 1;
inline void CommitReplaceArgs::clear_reqid() {
  reqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CommitReplaceArgs::reqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CommitReplaceArgs.ReqId)
  return reqid_;
}
inline void CommitReplaceArgs::set_reqid(::google::protobuf::int64 value) {
  
  reqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CommitReplaceArgs.ReqId)
}

// string cli = 2;
inline void CommitReplaceArgs::clear_cli() {
  cli_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommitReplaceArgs::cli() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CommitReplaceArgs.cli)
  return cli_.GetNoArena();
}
inline void CommitReplaceArgs::set_cli(const ::std::string& value) {
  
  cli_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CommitReplaceArgs.cli)
}
#if LANG_CXX11
inline void CommitReplaceArgs::set_cli(::std::string&& value) {
  
  cli_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.CommitReplaceArgs.cli)
}
#endif
inline void CommitReplaceArgs::set_cli(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cli_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.CommitReplaceArgs.cli)
}
inline void CommitReplaceArgs::set_cli(const char* value, size_t size) {
  
  cli_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.CommitReplaceArgs.cli)
}
inline ::std::string* CommitReplaceArgs::mutable_cli() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.CommitReplaceArgs.cli)
  return cli_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommitReplaceArgs::release_cli() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.CommitReplaceArgs.cli)
  
  return cli_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommitReplaceArgs::set_allocated_cli(::std::string* cli) {
  if (cli != NULL) {
    
  } else {
    
  }
  cli_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cli);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.CommitReplaceArgs.cli)
}

// string yangjson = 3;
inline void CommitReplaceArgs::clear_yangjson() {
  yangjson_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommitReplaceArgs::yangjson() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CommitReplaceArgs.yangjson)
  return yangjson_.GetNoArena();
}
inline void CommitReplaceArgs::set_yangjson(const ::std::string& value) {
  
  yangjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CommitReplaceArgs.yangjson)
}
#if LANG_CXX11
inline void CommitReplaceArgs::set_yangjson(::std::string&& value) {
  
  yangjson_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.CommitReplaceArgs.yangjson)
}
#endif
inline void CommitReplaceArgs::set_yangjson(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  yangjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.CommitReplaceArgs.yangjson)
}
inline void CommitReplaceArgs::set_yangjson(const char* value, size_t size) {
  
  yangjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.CommitReplaceArgs.yangjson)
}
inline ::std::string* CommitReplaceArgs::mutable_yangjson() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.CommitReplaceArgs.yangjson)
  return yangjson_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommitReplaceArgs::release_yangjson() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.CommitReplaceArgs.yangjson)
  
  return yangjson_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommitReplaceArgs::set_allocated_yangjson(::std::string* yangjson) {
  if (yangjson != NULL) {
    
  } else {
    
  }
  yangjson_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), yangjson);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.CommitReplaceArgs.yangjson)
}

// -------------------------------------------------------------------

// CommitReplaceReply

// int64 ResReqId = 1;
inline void CommitReplaceReply::clear_resreqid() {
  resreqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CommitReplaceReply::resreqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CommitReplaceReply.ResReqId)
  return resreqid_;
}
inline void CommitReplaceReply::set_resreqid(::google::protobuf::int64 value) {
  
  resreqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CommitReplaceReply.ResReqId)
}

// string errors = 2;
inline void CommitReplaceReply::clear_errors() {
  errors_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommitReplaceReply::errors() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CommitReplaceReply.errors)
  return errors_.GetNoArena();
}
inline void CommitReplaceReply::set_errors(const ::std::string& value) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CommitReplaceReply.errors)
}
#if LANG_CXX11
inline void CommitReplaceReply::set_errors(::std::string&& value) {
  
  errors_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.CommitReplaceReply.errors)
}
#endif
inline void CommitReplaceReply::set_errors(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.CommitReplaceReply.errors)
}
inline void CommitReplaceReply::set_errors(const char* value, size_t size) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.CommitReplaceReply.errors)
}
inline ::std::string* CommitReplaceReply::mutable_errors() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.CommitReplaceReply.errors)
  return errors_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommitReplaceReply::release_errors() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.CommitReplaceReply.errors)
  
  return errors_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommitReplaceReply::set_allocated_errors(::std::string* errors) {
  if (errors != NULL) {
    
  } else {
    
  }
  errors_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errors);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.CommitReplaceReply.errors)
}

// -------------------------------------------------------------------

// CommitMsg

// string label = 1;
inline void CommitMsg::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommitMsg::label() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CommitMsg.label)
  return label_.GetNoArena();
}
inline void CommitMsg::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CommitMsg.label)
}
#if LANG_CXX11
inline void CommitMsg::set_label(::std::string&& value) {
  
  label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.CommitMsg.label)
}
#endif
inline void CommitMsg::set_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.CommitMsg.label)
}
inline void CommitMsg::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.CommitMsg.label)
}
inline ::std::string* CommitMsg::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.CommitMsg.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommitMsg::release_label() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.CommitMsg.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommitMsg::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.CommitMsg.label)
}

// string comment = 2;
inline void CommitMsg::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommitMsg::comment() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CommitMsg.comment)
  return comment_.GetNoArena();
}
inline void CommitMsg::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CommitMsg.comment)
}
#if LANG_CXX11
inline void CommitMsg::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.CommitMsg.comment)
}
#endif
inline void CommitMsg::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.CommitMsg.comment)
}
inline void CommitMsg::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.CommitMsg.comment)
}
inline ::std::string* CommitMsg::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.CommitMsg.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommitMsg::release_comment() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.CommitMsg.comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommitMsg::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.CommitMsg.comment)
}

// -------------------------------------------------------------------

// CommitArgs

// .IOSXRExtensibleManagabilityService.CommitMsg msg = 1;
inline bool CommitArgs::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
inline void CommitArgs::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
}
inline const ::IOSXRExtensibleManagabilityService::CommitMsg& CommitArgs::msg() const {
  const ::IOSXRExtensibleManagabilityService::CommitMsg* p = msg_;
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CommitArgs.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::IOSXRExtensibleManagabilityService::CommitMsg*>(
      &::IOSXRExtensibleManagabilityService::_CommitMsg_default_instance_);
}
inline ::IOSXRExtensibleManagabilityService::CommitMsg* CommitArgs::release_msg() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.CommitArgs.msg)
  
  ::IOSXRExtensibleManagabilityService::CommitMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline ::IOSXRExtensibleManagabilityService::CommitMsg* CommitArgs::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::IOSXRExtensibleManagabilityService::CommitMsg;
  }
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.CommitArgs.msg)
  return msg_;
}
inline void CommitArgs::set_allocated_msg(::IOSXRExtensibleManagabilityService::CommitMsg* msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete msg_;
  }
  if (msg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, msg, submessage_arena);
    }
    
  } else {
    
  }
  msg_ = msg;
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.CommitArgs.msg)
}

// int64 ReqId = 2;
inline void CommitArgs::clear_reqid() {
  reqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CommitArgs::reqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CommitArgs.ReqId)
  return reqid_;
}
inline void CommitArgs::set_reqid(::google::protobuf::int64 value) {
  
  reqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CommitArgs.ReqId)
}

// -------------------------------------------------------------------

// CommitReply

// .IOSXRExtensibleManagabilityService.CommitResult result = 1;
inline void CommitReply::clear_result() {
  result_ = 0;
}
inline ::IOSXRExtensibleManagabilityService::CommitResult CommitReply::result() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CommitReply.result)
  return static_cast< ::IOSXRExtensibleManagabilityService::CommitResult >(result_);
}
inline void CommitReply::set_result(::IOSXRExtensibleManagabilityService::CommitResult value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CommitReply.result)
}

// int64 ResReqId = 2;
inline void CommitReply::clear_resreqid() {
  resreqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CommitReply::resreqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CommitReply.ResReqId)
  return resreqid_;
}
inline void CommitReply::set_resreqid(::google::protobuf::int64 value) {
  
  resreqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CommitReply.ResReqId)
}

// string errors = 3;
inline void CommitReply::clear_errors() {
  errors_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CommitReply::errors() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CommitReply.errors)
  return errors_.GetNoArena();
}
inline void CommitReply::set_errors(const ::std::string& value) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CommitReply.errors)
}
#if LANG_CXX11
inline void CommitReply::set_errors(::std::string&& value) {
  
  errors_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.CommitReply.errors)
}
#endif
inline void CommitReply::set_errors(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.CommitReply.errors)
}
inline void CommitReply::set_errors(const char* value, size_t size) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.CommitReply.errors)
}
inline ::std::string* CommitReply::mutable_errors() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.CommitReply.errors)
  return errors_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CommitReply::release_errors() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.CommitReply.errors)
  
  return errors_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CommitReply::set_allocated_errors(::std::string* errors) {
  if (errors != NULL) {
    
  } else {
    
  }
  errors_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errors);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.CommitReply.errors)
}

// -------------------------------------------------------------------

// DiscardChangesArgs

// int64 ReqId = 1;
inline void DiscardChangesArgs::clear_reqid() {
  reqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DiscardChangesArgs::reqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.DiscardChangesArgs.ReqId)
  return reqid_;
}
inline void DiscardChangesArgs::set_reqid(::google::protobuf::int64 value) {
  
  reqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.DiscardChangesArgs.ReqId)
}

// -------------------------------------------------------------------

// DiscardChangesReply

// int64 ResReqId = 1;
inline void DiscardChangesReply::clear_resreqid() {
  resreqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DiscardChangesReply::resreqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.DiscardChangesReply.ResReqId)
  return resreqid_;
}
inline void DiscardChangesReply::set_resreqid(::google::protobuf::int64 value) {
  
  resreqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.DiscardChangesReply.ResReqId)
}

// string errors = 2;
inline void DiscardChangesReply::clear_errors() {
  errors_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DiscardChangesReply::errors() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.DiscardChangesReply.errors)
  return errors_.GetNoArena();
}
inline void DiscardChangesReply::set_errors(const ::std::string& value) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.DiscardChangesReply.errors)
}
#if LANG_CXX11
inline void DiscardChangesReply::set_errors(::std::string&& value) {
  
  errors_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.DiscardChangesReply.errors)
}
#endif
inline void DiscardChangesReply::set_errors(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.DiscardChangesReply.errors)
}
inline void DiscardChangesReply::set_errors(const char* value, size_t size) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.DiscardChangesReply.errors)
}
inline ::std::string* DiscardChangesReply::mutable_errors() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.DiscardChangesReply.errors)
  return errors_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DiscardChangesReply::release_errors() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.DiscardChangesReply.errors)
  
  return errors_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DiscardChangesReply::set_allocated_errors(::std::string* errors) {
  if (errors != NULL) {
    
  } else {
    
  }
  errors_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errors);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.DiscardChangesReply.errors)
}

// -------------------------------------------------------------------

// ShowCmdArgs

// int64 ReqId = 1;
inline void ShowCmdArgs::clear_reqid() {
  reqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ShowCmdArgs::reqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ShowCmdArgs.ReqId)
  return reqid_;
}
inline void ShowCmdArgs::set_reqid(::google::protobuf::int64 value) {
  
  reqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ShowCmdArgs.ReqId)
}

// string cli = 2;
inline void ShowCmdArgs::clear_cli() {
  cli_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShowCmdArgs::cli() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ShowCmdArgs.cli)
  return cli_.GetNoArena();
}
inline void ShowCmdArgs::set_cli(const ::std::string& value) {
  
  cli_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ShowCmdArgs.cli)
}
#if LANG_CXX11
inline void ShowCmdArgs::set_cli(::std::string&& value) {
  
  cli_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.ShowCmdArgs.cli)
}
#endif
inline void ShowCmdArgs::set_cli(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cli_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.ShowCmdArgs.cli)
}
inline void ShowCmdArgs::set_cli(const char* value, size_t size) {
  
  cli_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.ShowCmdArgs.cli)
}
inline ::std::string* ShowCmdArgs::mutable_cli() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.ShowCmdArgs.cli)
  return cli_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowCmdArgs::release_cli() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.ShowCmdArgs.cli)
  
  return cli_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowCmdArgs::set_allocated_cli(::std::string* cli) {
  if (cli != NULL) {
    
  } else {
    
  }
  cli_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cli);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.ShowCmdArgs.cli)
}

// -------------------------------------------------------------------

// ShowCmdTextReply

// int64 ResReqId = 1;
inline void ShowCmdTextReply::clear_resreqid() {
  resreqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ShowCmdTextReply::resreqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ShowCmdTextReply.ResReqId)
  return resreqid_;
}
inline void ShowCmdTextReply::set_resreqid(::google::protobuf::int64 value) {
  
  resreqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ShowCmdTextReply.ResReqId)
}

// string output = 2;
inline void ShowCmdTextReply::clear_output() {
  output_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShowCmdTextReply::output() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ShowCmdTextReply.output)
  return output_.GetNoArena();
}
inline void ShowCmdTextReply::set_output(const ::std::string& value) {
  
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ShowCmdTextReply.output)
}
#if LANG_CXX11
inline void ShowCmdTextReply::set_output(::std::string&& value) {
  
  output_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.ShowCmdTextReply.output)
}
#endif
inline void ShowCmdTextReply::set_output(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.ShowCmdTextReply.output)
}
inline void ShowCmdTextReply::set_output(const char* value, size_t size) {
  
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.ShowCmdTextReply.output)
}
inline ::std::string* ShowCmdTextReply::mutable_output() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.ShowCmdTextReply.output)
  return output_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowCmdTextReply::release_output() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.ShowCmdTextReply.output)
  
  return output_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowCmdTextReply::set_allocated_output(::std::string* output) {
  if (output != NULL) {
    
  } else {
    
  }
  output_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.ShowCmdTextReply.output)
}

// string errors = 3;
inline void ShowCmdTextReply::clear_errors() {
  errors_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShowCmdTextReply::errors() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ShowCmdTextReply.errors)
  return errors_.GetNoArena();
}
inline void ShowCmdTextReply::set_errors(const ::std::string& value) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ShowCmdTextReply.errors)
}
#if LANG_CXX11
inline void ShowCmdTextReply::set_errors(::std::string&& value) {
  
  errors_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.ShowCmdTextReply.errors)
}
#endif
inline void ShowCmdTextReply::set_errors(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.ShowCmdTextReply.errors)
}
inline void ShowCmdTextReply::set_errors(const char* value, size_t size) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.ShowCmdTextReply.errors)
}
inline ::std::string* ShowCmdTextReply::mutable_errors() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.ShowCmdTextReply.errors)
  return errors_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowCmdTextReply::release_errors() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.ShowCmdTextReply.errors)
  
  return errors_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowCmdTextReply::set_allocated_errors(::std::string* errors) {
  if (errors != NULL) {
    
  } else {
    
  }
  errors_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errors);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.ShowCmdTextReply.errors)
}

// -------------------------------------------------------------------

// ShowCmdJSONReply

// int64 ResReqId = 1;
inline void ShowCmdJSONReply::clear_resreqid() {
  resreqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ShowCmdJSONReply::resreqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.ResReqId)
  return resreqid_;
}
inline void ShowCmdJSONReply::set_resreqid(::google::protobuf::int64 value) {
  
  resreqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.ResReqId)
}

// string jsonoutput = 2;
inline void ShowCmdJSONReply::clear_jsonoutput() {
  jsonoutput_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShowCmdJSONReply::jsonoutput() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.jsonoutput)
  return jsonoutput_.GetNoArena();
}
inline void ShowCmdJSONReply::set_jsonoutput(const ::std::string& value) {
  
  jsonoutput_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.jsonoutput)
}
#if LANG_CXX11
inline void ShowCmdJSONReply::set_jsonoutput(::std::string&& value) {
  
  jsonoutput_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.jsonoutput)
}
#endif
inline void ShowCmdJSONReply::set_jsonoutput(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  jsonoutput_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.jsonoutput)
}
inline void ShowCmdJSONReply::set_jsonoutput(const char* value, size_t size) {
  
  jsonoutput_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.jsonoutput)
}
inline ::std::string* ShowCmdJSONReply::mutable_jsonoutput() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.jsonoutput)
  return jsonoutput_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowCmdJSONReply::release_jsonoutput() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.jsonoutput)
  
  return jsonoutput_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowCmdJSONReply::set_allocated_jsonoutput(::std::string* jsonoutput) {
  if (jsonoutput != NULL) {
    
  } else {
    
  }
  jsonoutput_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jsonoutput);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.jsonoutput)
}

// string errors = 3;
inline void ShowCmdJSONReply::clear_errors() {
  errors_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShowCmdJSONReply::errors() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.errors)
  return errors_.GetNoArena();
}
inline void ShowCmdJSONReply::set_errors(const ::std::string& value) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.errors)
}
#if LANG_CXX11
inline void ShowCmdJSONReply::set_errors(::std::string&& value) {
  
  errors_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.errors)
}
#endif
inline void ShowCmdJSONReply::set_errors(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.errors)
}
inline void ShowCmdJSONReply::set_errors(const char* value, size_t size) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.errors)
}
inline ::std::string* ShowCmdJSONReply::mutable_errors() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.errors)
  return errors_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowCmdJSONReply::release_errors() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.errors)
  
  return errors_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowCmdJSONReply::set_allocated_errors(::std::string* errors) {
  if (errors != NULL) {
    
  } else {
    
  }
  errors_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errors);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.ShowCmdJSONReply.errors)
}

// -------------------------------------------------------------------

// CreateSubsArgs

// int64 ReqId = 1;
inline void CreateSubsArgs::clear_reqid() {
  reqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CreateSubsArgs::reqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CreateSubsArgs.ReqId)
  return reqid_;
}
inline void CreateSubsArgs::set_reqid(::google::protobuf::int64 value) {
  
  reqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CreateSubsArgs.ReqId)
}

// int64 encode = 2;
inline void CreateSubsArgs::clear_encode() {
  encode_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CreateSubsArgs::encode() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CreateSubsArgs.encode)
  return encode_;
}
inline void CreateSubsArgs::set_encode(::google::protobuf::int64 value) {
  
  encode_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CreateSubsArgs.encode)
}

// string subidstr = 3;
inline void CreateSubsArgs::clear_subidstr() {
  subidstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateSubsArgs::subidstr() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CreateSubsArgs.subidstr)
  return subidstr_.GetNoArena();
}
inline void CreateSubsArgs::set_subidstr(const ::std::string& value) {
  
  subidstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CreateSubsArgs.subidstr)
}
#if LANG_CXX11
inline void CreateSubsArgs::set_subidstr(::std::string&& value) {
  
  subidstr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.CreateSubsArgs.subidstr)
}
#endif
inline void CreateSubsArgs::set_subidstr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  subidstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.CreateSubsArgs.subidstr)
}
inline void CreateSubsArgs::set_subidstr(const char* value, size_t size) {
  
  subidstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.CreateSubsArgs.subidstr)
}
inline ::std::string* CreateSubsArgs::mutable_subidstr() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.CreateSubsArgs.subidstr)
  return subidstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateSubsArgs::release_subidstr() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.CreateSubsArgs.subidstr)
  
  return subidstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateSubsArgs::set_allocated_subidstr(::std::string* subidstr) {
  if (subidstr != NULL) {
    
  } else {
    
  }
  subidstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subidstr);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.CreateSubsArgs.subidstr)
}

// -------------------------------------------------------------------

// CreateSubsReply

// int64 ResReqId = 1;
inline void CreateSubsReply::clear_resreqid() {
  resreqid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CreateSubsReply::resreqid() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CreateSubsReply.ResReqId)
  return resreqid_;
}
inline void CreateSubsReply::set_resreqid(::google::protobuf::int64 value) {
  
  resreqid_ = value;
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CreateSubsReply.ResReqId)
}

// bytes data = 2;
inline void CreateSubsReply::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateSubsReply::data() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CreateSubsReply.data)
  return data_.GetNoArena();
}
inline void CreateSubsReply::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CreateSubsReply.data)
}
#if LANG_CXX11
inline void CreateSubsReply::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.CreateSubsReply.data)
}
#endif
inline void CreateSubsReply::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.CreateSubsReply.data)
}
inline void CreateSubsReply::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.CreateSubsReply.data)
}
inline ::std::string* CreateSubsReply::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.CreateSubsReply.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateSubsReply::release_data() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.CreateSubsReply.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateSubsReply::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.CreateSubsReply.data)
}

// string errors = 3;
inline void CreateSubsReply::clear_errors() {
  errors_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateSubsReply::errors() const {
  // @@protoc_insertion_point(field_get:IOSXRExtensibleManagabilityService.CreateSubsReply.errors)
  return errors_.GetNoArena();
}
inline void CreateSubsReply::set_errors(const ::std::string& value) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:IOSXRExtensibleManagabilityService.CreateSubsReply.errors)
}
#if LANG_CXX11
inline void CreateSubsReply::set_errors(::std::string&& value) {
  
  errors_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:IOSXRExtensibleManagabilityService.CreateSubsReply.errors)
}
#endif
inline void CreateSubsReply::set_errors(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:IOSXRExtensibleManagabilityService.CreateSubsReply.errors)
}
inline void CreateSubsReply::set_errors(const char* value, size_t size) {
  
  errors_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:IOSXRExtensibleManagabilityService.CreateSubsReply.errors)
}
inline ::std::string* CreateSubsReply::mutable_errors() {
  
  // @@protoc_insertion_point(field_mutable:IOSXRExtensibleManagabilityService.CreateSubsReply.errors)
  return errors_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateSubsReply::release_errors() {
  // @@protoc_insertion_point(field_release:IOSXRExtensibleManagabilityService.CreateSubsReply.errors)
  
  return errors_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateSubsReply::set_allocated_errors(::std::string* errors) {
  if (errors != NULL) {
    
  } else {
    
  }
  errors_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errors);
  // @@protoc_insertion_point(field_set_allocated:IOSXRExtensibleManagabilityService.CreateSubsReply.errors)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace IOSXRExtensibleManagabilityService

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::IOSXRExtensibleManagabilityService::CommitResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::IOSXRExtensibleManagabilityService::CommitResult>() {
  return ::IOSXRExtensibleManagabilityService::CommitResult_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mdt_5fgrpc_5fdialin_2fmdt_5fgrpc_5fdialin_2eproto__INCLUDED
